{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/state/ecs.js","webpack:///./src/lib/graphics.js","webpack:///./node_modules/lodash/lodash.js","webpack:///../node_modules/camelcase/index.js","webpack:///../src/Properties/Property.js","webpack:///../src/Properties/SimpleProperty.js","webpack:///../src/Properties/EntityProperty.js","webpack:///../src/Properties/EntityArrayProperty.js","webpack:///../src/Properties/PropertyFactory.js","webpack:///../src/Component.js","webpack:///../src/registries/ComponentRegistry.js","webpack:///../node_modules/deepmerge/dist/cjs.js","webpack:///../src/PrefabComponent.js","webpack:///../src/Prefab.js","webpack:///../src/registries/PrefabRegistry.js","webpack:///../node_modules/nanoid/non-secure/index.js","webpack:///../src/EntityEvent.js","webpack:///../src/Entity.js","webpack:///../src/registries/EntityRegistry.js","webpack:///../src/Query.js","webpack:///../src/registries/QueryRegistry.js","webpack:///../src/Engine.js","webpack:///./src/lib/canvas.js","webpack:///./src/components/Position.js","webpack:///./src/components/Appearance.js","webpack:///./src/components/Name.js","webpack:///./src/components/IsBlocking.js","webpack:///./src/lib/adventure-log.js","webpack:///./src/components/CanBeAbsorbed.js","webpack:///./src/components/CanLegend.js","webpack:///./src/components/Description.js","webpack:///./src/components/Layer400.js","webpack:///./src/state/events.js","webpack:///./node_modules/pathfinding/src/core/DiagonalMovement.js","webpack:///./src/components/IsInFov.js","webpack:///./src/components/Brain.js","webpack:///./src/components/Blood.js","webpack:///./src/components/Health.js","webpack:///./src/components/Layer300.js","webpack:///./src/components/Layer100.js","webpack:///./node_modules/pathfinding/src/core/Util.js","webpack:///./src/components/CanDijkstra.js","webpack:///./src/components/IsRevealed.js","webpack:///./src/components/CanAbsorb.js","webpack:///./src/components/IsOpaque.js","webpack:///./src/components/MoveTo.js","webpack:///./node_modules/pathfinding/src/core/Heuristic.js","webpack:///./node_modules/heap/index.js","webpack:///./node_modules/pathfinding/src/finders/JumpPointFinderBase.js","webpack:///./src/components/Animate.js","webpack:///./src/components/isBoneless.js","webpack:///./src/components/Soilage.js","webpack:///./src/components/Trap.js","webpack:///./src/components/AreaOfEffect.js","webpack:///./node_modules/pathfinding/src/core/Node.js","webpack:///./node_modules/pathfinding/src/finders/AStarFinder.js","webpack:///./node_modules/pathfinding/src/finders/BiAStarFinder.js","webpack:///./node_modules/pathfinding/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/copy-to-clipboard/index.js","webpack:///./src/state/cache.js","webpack:///./src/components/IsDead.js","webpack:///./src/prefabs/bonfire.js","webpack:///./src/prefabs/char.js","webpack:///./src/prefabs/floor.js","webpack:///./src/prefabs/fountain.js","webpack:///./src/prefabs/gelatinous-cube.js","webpack:///./src/prefabs/goblin.js","webpack:///./src/prefabs/player.js","webpack:///./src/prefabs/skeleton.js","webpack:///./src/prefabs/blood-trap.js","webpack:///./src/prefabs/wall.js","webpack:///./node_modules/toggle-selection/index.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/pathfinding/src/PathFinding.js","webpack:///./node_modules/heap/lib/heap.js","webpack:///./node_modules/pathfinding/src/core/Grid.js","webpack:///./node_modules/pathfinding/src/finders/BestFirstFinder.js","webpack:///./node_modules/pathfinding/src/finders/BreadthFirstFinder.js","webpack:///./node_modules/pathfinding/src/finders/DijkstraFinder.js","webpack:///./node_modules/pathfinding/src/finders/BiBestFirstFinder.js","webpack:///./node_modules/pathfinding/src/finders/BiBreadthFirstFinder.js","webpack:///./node_modules/pathfinding/src/finders/BiDijkstraFinder.js","webpack:///./node_modules/pathfinding/src/finders/IDAStarFinder.js","webpack:///./node_modules/pathfinding/src/finders/JumpPointFinder.js","webpack:///./node_modules/pathfinding/src/finders/JPFNeverMoveDiagonally.js","webpack:///./node_modules/pathfinding/src/finders/JPFAlwaysMoveDiagonally.js","webpack:///./node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfNoObstacles.js","webpack:///./node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfAtMostOneObstacle.js","webpack:///./src/lib/grid.js","webpack:///./src/lib/dijkstra.js","webpack:///./src/queries/index.js","webpack:///./src/lib/pathfinding.js","webpack:///./src/systems/movement.js","webpack:///./src/lib/process-user-input.js","webpack:///./src/lib/dungeon.js","webpack:///./src/initializers/dungeon-level.init.js","webpack:///./src/systems/ai.js","webpack:///./src/systems/aoe.js","webpack:///./src/lib/fov.js","webpack:///./src/gui/Terminal.js","webpack:///./src/systems/render.js","webpack:///./src/lib/debug.js","webpack:///./src/index.js","webpack:///./src/systems/fov.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ecs","Engine","cache","Cache","registerComponent","Animate","AreaOfEffect","Appearance","Blood","Brain","CanAbsorb","CanBeAbsorbed","CanDijkstra","CanLegend","Description","Health","isBoneless","IsBlocking","IsDead","IsInFov","IsOpaque","IsRevealed","Layer100","Layer300","Layer400","MoveTo","Name","Position","Soilage","Trap","registerPrefab","BonfirePrefab","CharPrefab","FloorPrefab","FountainPrefab","GelatinousCubePrefab","GoblinPrefab","PlayerPrefab","SkeletonPrefab","TrapPrefab","WallPrefab","gameState","userInput","playerTurn","turn","adventureLog","innerMonologue","text","omniscient","player","createPrefab","loadGame","data","JSON","parse","localStorage","getItem","entities","all","destroy","deserialize","getEntity","playerId","console","log","saveGame","gameSaveData","serialize","id","setItem","stringify","window","snail","colors","defaultColor","defaultBGColor","revealedColor","inventoryHighlight","damage","blood","torchLight","campfire","fountain","armor","bandage","chest","currency","multipleItems","potion","weapon","hudText","healthBar","wall","floor","cavernFloor","stairsUp","stairsDown","goblin","rat","skeleton","gelatinousCube","chars","defaultChar","corpse","item","track","FUNC_ERROR_TEXT","PLACEHOLDER","wrapFlags","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsBreakRange","rsMathOpRange","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsSeq","join","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","global","freeSelf","self","root","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","types","require","binding","e","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","apply","func","thisArg","args","length","arrayAggregator","array","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","Array","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","undefined","basePropertyOf","baseReduce","current","baseTimes","baseUnary","baseValues","props","cacheHas","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","deburrLetter","escapeHtmlChar","escapeStringChar","chr","hasUnicode","string","test","mapToArray","map","size","forEach","overArg","transform","arg","replaceHolders","setToArray","set","setToPairs","stringSize","lastIndex","unicodeSize","stringToArray","match","unicodeToArray","split","asciiToArray","unescapeHtmlChar","_","runInContext","context","uid","defaults","pick","Date","Error","Math","String","TypeError","arrayProto","funcProto","objectProto","coreJsData","funcToString","toString","idCounter","maskSrcKey","exec","keys","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","replace","Buffer","Uint8Array","allocUnsafe","getPrototype","getPrototypeOf","objectCreate","propertyIsEnumerable","splice","spreadableSymbol","isConcatSpreadable","symIterator","iterator","symToStringTag","getNative","ctxClearTimeout","clearTimeout","ctxNow","now","ctxSetTimeout","setTimeout","nativeCeil","ceil","nativeFloor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","isFinite","nativeJoin","nativeKeys","nativeMax","max","nativeMin","min","nativeNow","nativeParseInt","nativeRandom","random","nativeReverse","reverse","DataView","Map","Promise","Set","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","proto","isObject","baseLodash","chainAll","this","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entries","clear","entry","ListCache","MapCache","SetCache","__data__","add","Stack","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","push","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","baseEach","baseAssign","copyObject","baseAt","paths","skip","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","constructor","input","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","Ctor","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","symbol","initCloneByTag","stacked","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","outer","computed","valuesIndex","templateSettings","pop","getMapData","pairs","LARGE_ARRAY_SIZE","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","isSymbol","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","isFunction","baseGet","path","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInvoke","parent","last","baseIsArguments","baseIsEqual","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","message","convert","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","COMPARE_PARTIAL_FLAG","baseIsNative","baseIteratee","identity","baseMatchesProperty","baseMatches","baseKeys","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","mergeFunc","safeGet","newValue","isTyped","isArrayLikeObject","isPlainObject","toPlainObject","baseMergeDeep","baseNth","baseOrderBy","iteratees","orders","getIteratee","comparer","sort","baseSortBy","objCriteria","criteria","othCriteria","ordersLength","compareAscending","order","compareMultiple","basePickBy","baseSet","basePullAll","indexOf","basePullAt","indexes","previous","baseUnset","baseRepeat","baseRest","start","setToString","overRest","baseSample","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","end","baseSome","baseSortedIndex","retHighest","low","high","MAX_ARRAY_LENGTH","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","slice","copy","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","iterable","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","createCtor","arguments","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","wrapper","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","newHolders","createRecurry","fn","reorder","createInverter","toIteratee","baseInverter","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","charsLength","createRange","step","toFinite","baseRange","createRelationalOperation","toNumber","wrapFunc","isCurry","newData","setData","setWrapToString","createRound","precision","toInteger","pair","noop","createToPairs","baseToPairs","createWrap","srcBitmask","newBitmask","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrLength","arrValue","flatten","otherFunc","type","getValue","stubArray","hasPath","hasFunc","isLength","ArrayBuffer","resolve","ctorString","isMaskable","stubFalse","otherArgs","oldArray","shortOut","reference","details","insertWrapDetails","updateWrapDetails","getWrapDetails","count","lastCalled","stamp","remaining","rand","memoize","memoizeCapped","charCodeAt","quote","subString","clone","difference","differenceBy","differenceWith","findIndex","findLastIndex","head","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","group","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","chain","interceptor","wrapperAt","countBy","find","findLast","forEachRight","groupBy","invokeMap","keyBy","partition","sortBy","before","bindKey","WRAP_BIND_FLAG","debounce","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","time","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","cancel","flush","defer","delay","resolver","memoized","negate","overArgs","transforms","funcsLength","partial","partialRight","rearg","gt","gte","isError","isInteger","isNumber","isString","lt","lte","toArray","next","done","iteratorToArray","remainder","toLength","isBinary","assign","assignIn","assignInWith","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","CLONE_DEEP_FLAG","basePick","pickBy","prop","toPairs","toPairsIn","camelCase","word","toLowerCase","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","toUpperCase","pattern","hasUnicodeWord","unicodeWords","asciiWords","attempt","bindAll","methodNames","flow","flowRight","method","methodOf","mixin","over","overEvery","overSome","basePropertyDeep","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","after","castArray","chunk","compact","concat","cond","conforms","baseConforms","properties","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","fill","baseFill","filter","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","mapValues","matches","matchesProperty","nthArg","omitBy","once","orderBy","propertyOf","pullAllBy","pullAllWith","reject","remove","rest","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","limit","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","isArrLike","unary","uniq","uniqBy","uniqWith","unset","update","updateWith","valuesIn","wrap","zipObject","zipObjectDeep","entriesIn","extend","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","target","position","escape","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","baseInRange","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isMatch","isMatchWith","isNaN","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lastIndexOf","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","padStart","radix","floating","temp","reduce","reduceRight","repeat","sample","some","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","template","settings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","times","toLower","toSafeInteger","toUpper","trim","trimEnd","trimStart","truncate","omission","search","substring","newEnd","unescape","uniqueId","prefix","each","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","dir","isRight","view","getView","iterLength","takeCount","iterIndex","commit","wrapped","toJSON","pascalCase","x","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","component","v","entity","Proxy","Reflect","old","deleteProperty","len","proxy","ref","EntityProperty","EntityArrayProperty","SimpleProperty","Boolean","ob","handlerName","camelcase","evt","initialValue","initialProperties","_defaultPropertyValue","PropertyFactory","Component","_getType","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","mergeObject","destination","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","prev","overwrite","componentDef","initialProps","arrComps","accessor","initialCompProps","registered","prefab","Prefab","inherit","componentData","def","PrefabComponent","PrefabRegistry","nameOrClassOrPrefab","urlAlphabet","writable","components","getAccessor","hasType","nestedComponent","typeOrClass","attach","configurable","allowMultiple","isComponent","instance","v2","EntityEvent","Entity","refs","json","entityData","createOrGetById","any","none","hasAny","hasAll","hasNone","query","Query","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","prefabs","nameOrClass","queries","deserializeEntity","canvas","ctx","pixelRatio","devicePixelRatio","document","querySelector","getContext","layers","ground","tracks","items","abovePlayer","sky","grid","width","height","y","hud","hud2","menu","menu2","menu3","calculatedFontSize","innerWidth","cellWidth","cellHeight","fontSize","style","cssText","font","textAlign","textBaseline","drawBackground","color","alpha","globalAlpha","fillStyle","fillRect","drawChar","char","pos","fgA","rotate","fillText","newx","newy","save","translate","PI","restore","drawCell","fg","bg","bgA","appearance","background","bgColor","charColor","clearCanvas","clearRect","clearCell","pxToCell","ev","bounds","getBoundingClientRect","relativeX","clientX","left","relativeY","clientY","top","trunc","px","py","currentColor","layer","nomen","innerLog","canBeAbsorbed","soiled","dead","handle","default","CLEAN","CONTACT","OBSERVE","SET_START_TIME","SOIL","TAKE_DAMAGE","Always","Never","IfAtMostOneObstacle","OnlyWhenNoObstacles","ai","amount","backtrace","node","x0","y0","x1","y1","sx","sy","dx","dy","err","e2","abs","line","biBacktrace","nodeA","nodeB","pathA","pathB","pathLength","a","b","sqrt","expandPath","coord0","coord1","interpolated","interpolatedLen","j","expanded","smoothenPath","newPath","coord","testCoord","blocked","isWalkableAt","lastValidCoord","compressPath","lx","ly","ldx","ldy","sq","compressed","canAbsorb","relative","manhattan","euclidean","octile","F","SQRT2","chebyshev","Heap","Util","Heuristic","JumpPointFinderBase","opt","heuristic","trackJumpRecursion","findPath","startX","startY","endX","endY","openList","f","startNode","getNodeAt","endNode","g","opened","empty","closed","_identifySuccessors","neighbors","neighbor","jumpPoint","jx","jy","ng","jumpNode","_findNeighbors","_jump","h","updateItem","startTime","duration","animation","stops","soilage","fireEvent","sourceName","sourceEntityId","triggered","aoe","aiEntities","damageType","damageAmount","affectRate","aoeType","aoeData","walkable","DiagonalMovement","AStarFinder","allowDiagonal","dontCrossCorners","weight","diagonalMovement","getNeighbors","BiAStarFinder","cmp","startOpenList","endOpenList","webpackPolyfill","deprecate","children","deselectCurrent","clipboardToIE11Formatting","debug","reselectPrevious","selection","mark","success","getSelection","createElement","textContent","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","stopPropagation","format","preventDefault","clipboardData","warn","clearData","onCopy","body","appendChild","selectNodeContents","addRange","execCommand","error","copyKey","navigator","userAgent","prompt","removeRange","removeAllRanges","removeChild","playerReverse","entitiesAtLocation","acc","dijkstraMaps","validate","operation","rangeCount","active","activeElement","ranges","getRangeAt","tagName","blur","focus","originalModule","defaultCmp","heapify","heappop","heappush","heappushpop","heapreplace","insort","nlargest","nsmallest","_siftdown","_siftup","lo","hi","lastelt","returnitem","_ref","_i","_len","_ref1","_results","_results1","_j","elem","los","startpos","newitem","parentpos","childpos","endpos","rightpos","nodes","pushpop","peek","contains","heap","insert","front","Node","Grid","width_or_matrix","matrix","_buildNodes","isInside","setWalkableAt","s0","d0","s1","d1","s2","d2","s3","d3","thisNodes","newGrid","newNodes","BestFirstFinder","orig","BreadthFirstFinder","shift","DijkstraFinder","BiBestFirstFinder","BiBreadthFirstFinder","by","BiDijkstraFinder","IDAStarFinder","trackRecursion","timeLimit","route","getTime","cutoff","k","neighbour","neighbours","retainCount","tested","cutOff","JPFNeverMoveDiagonally","JPFAlwaysMoveDiagonally","JPFMoveDiagonallyIfNoObstacles","JPFMoveDiagonallyIfAtMostOneObstacle","neighborNodes","neighborNode","isNextWalkable","isTopWalkable","isBottomWalkable","isRightWalkable","isLeftWalkable","CARDINAL","DIAGONAL","ALL","toCell","cellOrId","cell","idToCell","toLocId","locId","cellToId","insideCircle","center","tile","radius","rectangle","tileProps","hasWalls","tiles","x2","y2","yi","xi","coords","direction","points","candidate","getNeighborIds","dijkstra","goals","weights","frontier","distance","idx","neighborId","esAtLoc","readSet","neighborIds","dscore","goal","createQuery","aiEntitiesInFov","animatingEntities","aoeEntities","blockingEntities","dijkstraAbleEntities","inFovEntities","layer100Entities","layer300Entities","layer400Entities","legendEntities","movableEntities","opaqueEntities","renderableEntities","soiledEntities","drunkenWalk","walkDijkstra","dMapName","score","nextPosition","dScore","baseMatrix","aStar","readObj","eId","isBlocking","PF","updateBloodDijkstra","bloodDijkstraMap","addObj","kill","currentBackground","splatterBlood","splatterSelf","locIds","bumpAttack","targetEntity","health","hit","absorb","cEntity","movement","mPos","moveTo","mx","my","blockers","entitiesAtLoc","eid","potentialBlocker","blocker","brain","playerEntity","addSet","playerDijkstraMap","dMap","coeff","dR","dijkstraReverse","processUserInput","payload","digHorizontalPassage","sprite","digVerticalPassage","digDrunkenWalk","loc","mapX","mapY","isOnMapEdge","initDungeonLevel","dungeon","maxRoomCount","minRoomSize","maxRoomSize","blocking","opaque","rooms","roomTiles","rw","rh","rx","ry","room","rect2","rect1","prevRoom","curr","processedTiles","digLoc","openTileIds","tileId","generateDungeon","currTile","moveToPlayer","newLoc","moveAwayFromPlayer","meander","frequency","stickiness","moveToBlood","areaOfEffect","locIdsInRange","bottom","right","locsIds","cx","cy","circle","octantTransforms","xx","xy","yx","yy","createFOV","originX","originY","visible","blockingLocations","isOpaque","reveal","castShadows","row","newStart","deltaY","deltaX","currentX","currentY","leftSlope","rightSlope","octant","fov","cell1","cell2","pow","Terminal","templates","fadeY","isDead","percent","bars","tempt","draw","textToRender","fadeX","cursor","tp","bloodLines","drawCellIfAble","isInFov","isRevealed","AdventureLog","InnerMonologue","Legend","MorgueBlood","Morgue","render","playerDijkstra","layer100","layer200","layer300","layer400","drawNamePlates","gameTick","FOV","classList","initGame","requestAnimationFrame","gameLoop","gameOver","onclick","copyToClipboard"],"mappings":"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","file":"main.45d0de4abe5a7d897871.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 72);\n","import { Engine } from \"geotic\";\nimport Cache from \"./cache\";\n\nimport Animate from \"../components/Animate\";\nimport Appearance from \"../components/Appearance\";\nimport Blood from \"../components/Blood\";\nimport Brain from \"../components/Brain\";\nimport CanAbsorb from \"../components/CanAbsorb\";\nimport CanBeAbsorbed from \"../components/CanBeAbsorbed\";\nimport CanDijkstra from \"../components/CanDijkstra\";\nimport CanLegend from \"../components/CanLegend\";\nimport Description from \"../components/Description\";\nimport Health from \"../components/Health\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport isBoneless from \"../components/isBoneless\";\nimport IsDead from \"../components/IsDead\";\nimport IsInFov from \"../components/IsInFov\";\nimport IsOpaque from \"../components/IsOpaque\";\nimport IsRevealed from \"../components/IsRevealed\";\nimport Layer100 from \"../components/Layer100\";\nimport Layer300 from \"../components/Layer300\";\nimport Layer400 from \"../components/Layer400\";\nimport MoveTo from \"../components/MoveTo\";\nimport Name from \"../components/Name\";\nimport Position from \"../components/Position\";\nimport Soilage from \"../components/Soilage\";\nimport Trap from \"../components/Trap\";\n\nimport BonfirePrefab from \"../prefabs/bonfire\";\nimport CharPrefab from \"../prefabs/char\";\nimport FloorPrefab from \"../prefabs/floor\";\nimport FountainPrefab from \"../prefabs/fountain\";\nimport GelatinousCubePrefab from \"../prefabs/gelatinous-cube\";\nimport GoblinPrefab from \"../prefabs/goblin\";\nimport PlayerPrefab from \"../prefabs/player\";\nimport SkeletonPrefab from \"../prefabs/skeleton\";\nimport TrapPrefab from \"../prefabs/blood-trap\";\nimport WallPrefab from \"../prefabs/wall\";\nimport AreaOfEffect from \"../components/AreaOfEffect\";\n\nconst ecs = new Engine();\nexport const cache = new Cache();\n\n// all Components and Prefabs must be `registered` by the engine\necs.registerComponent(Animate);\necs.registerComponent(AreaOfEffect);\necs.registerComponent(Appearance);\necs.registerComponent(Blood);\necs.registerComponent(Brain);\necs.registerComponent(CanAbsorb);\necs.registerComponent(CanBeAbsorbed);\necs.registerComponent(CanDijkstra);\necs.registerComponent(CanLegend);\necs.registerComponent(Description);\necs.registerComponent(Health);\necs.registerComponent(isBoneless);\necs.registerComponent(IsBlocking);\necs.registerComponent(IsDead);\necs.registerComponent(IsInFov);\necs.registerComponent(IsOpaque);\necs.registerComponent(IsRevealed);\necs.registerComponent(Layer100);\necs.registerComponent(Layer300);\necs.registerComponent(Layer400);\necs.registerComponent(MoveTo);\necs.registerComponent(Name);\necs.registerComponent(Position);\necs.registerComponent(Soilage);\necs.registerComponent(Trap);\n\necs.registerPrefab(BonfirePrefab);\necs.registerPrefab(CharPrefab);\necs.registerPrefab(FloorPrefab);\necs.registerPrefab(FountainPrefab);\necs.registerPrefab(GelatinousCubePrefab);\necs.registerPrefab(GoblinPrefab);\necs.registerPrefab(PlayerPrefab);\necs.registerPrefab(SkeletonPrefab);\necs.registerPrefab(TrapPrefab);\necs.registerPrefab(WallPrefab);\n\nexport let gameState = {\n    userInput: null,\n    playerTurn: true,\n    turn: 0,\n    adventureLog: [],\n    innerMonologue: [{ text: \"I think, therefore I am.\" }],\n    omniscient: false,\n};\n\nexport let player = ecs.createPrefab(\"PlayerPrefab\");\n\nexport function loadGame() {\n    const data = JSON.parse(localStorage.getItem(\"gameSaveData\"));\n    if (!data) {\n        console.log(\"No Saved Games Found\");\n        return;\n    }\n\n    for (let item of ecs.entities.all) {\n        item.destroy();\n    }\n\n    ecs.deserialize(data.ecs);\n    cache.deserialize(data.cache);\n    gameState = data.gameState;\n    player = ecs.getEntity(data.playerId);\n\n    console.log(\"game loaded\", {\n        cache,\n        gameState,\n        ecs,\n        player,\n    });\n}\n\nexport function saveGame() {\n    const gameSaveData = {\n        ecs: ecs.serialize(),\n        cache: cache.serialize(),\n        gameState,\n        playerId: player.id,\n    };\n    localStorage.setItem(\"gameSaveData\", JSON.stringify(gameSaveData));\n\n    console.log(\"game saved\");\n}\n\nwindow.snail = {\n    ecs,\n    cache,\n    gameState,\n    player,\n};\n\nexport default ecs;\n\nmodule.export = {\n    cache,\n    gameState,\n    player,\n    loadGame,\n    saveGame,\n};\n","export const colors = {\n  defaultColor: \"#ff0077\",\n  defaultBGColor: \"#000\",\n  revealedColor: \"#222\",\n\n  inventoryHighlight: \"#A9CCE3\",\n\n  // animations\n  damage: \"#ff0000\",\n\n  // soilage\n  blood: \"#cc1100\",\n\n  // light:\n  torchLight: \"#FFD00E\",\n  campfire: \"#FFD00E\",\n\n  // staging:\n  fountain: \"#3366FF\",\n\n  // items:\n  armor: \"#DAA520\",\n  bandage: \"#F7DC6F\",\n  chest: \"#DAA520\",\n  currency: \"#DAA520\",\n  multipleItems: \"#DAA520\",\n  potion: \"#DAA520\",\n  weapon: \"#DAA520\",\n  // log\n  hudText: \"#fff\",\n  healthBar: \"#B91906\",\n  // maps\n  wall: [\"#AAA\", \"#BBB\", \"#CCC\", \"#DDD\"],\n  floor: [\"#555555\", \"#666666\", \"#444444\"],\n  cavernFloor: [\"#71331e\", \"#652d1b\", \"#5a2818\", \"#4f2315\"],\n  stairsUp: \"#AAA\",\n  stairsDown: \"#AAA\",\n  // player\n  player: \"#FFF\",\n  // monsters\n  goblin: \"#0C9\",\n  rat: \"#F1948A\",\n  skeleton: \"#fde5a4\",\n  gelatinousCube: \"#9abf31\",\n};\n\nexport const chars = {\n  defaultChar: \"?\",\n  corpse: \"%\",\n  // staging\n  campfire: \"ô\", // ö o\n  fountain: \"⦿\", // ⦿ ⦾ ◯ ⨀ ⊚\n  // equipment\n  armor: \"[\",\n  weapon: \")\",\n  // containers\n  chest: \"=\",\n  // items\n  currency: \"*\",\n  potion: \"!\",\n  multipleItems: \"&\",\n  item: \"~\",\n  // maps\n  wall: \"#\",\n  floor: \"•\",\n  cavernFloor: \"•\",\n  stairsUp: \"<\",\n  stairsDown: \">\",\n  // tracks\n  track: \"•\",\n  // player\n  player: \"@\",\n  // monsters\n  goblin: \"g\",\n  rat: \"r\",\n  skeleton: \"s\",\n};\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.15';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // with lookup (in case of e.g. prototype pollution), and strip newlines if any.\n      // A newline wouldn't be a valid sourceURL anyway, and it'd enable code injection.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/[\\r\\n]/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      // Like with sourceURL, we take care to not check the option's prototype,\n      // as this configuration is a code injection vector.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\n\nexport default class EntityProperty extends Property {\n    id;\n\n    set(value) {\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n\n        if (value && value.id) {\n            this.ecs.entities.addRef(value.id, this);\n            this.id = value.id;\n            return;\n        }\n\n        if (typeof value === 'string') {\n            this.ecs.entities.addRef(value, this);\n            this.id = value;\n            return;\n        }\n\n        this.id = undefined;\n    }\n\n    get() {\n        return this.id && this.component.ecs.getEntity(this.id);\n    }\n\n    serialize() {\n        return this.id;\n    }\n\n    onDestroyed() {\n        if (this.id) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n    }\n\n    cleanupReference(entity) {\n        if (this.id === entity.id) {\n            this.id = undefined;\n        } else {\n            console.warn(\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`\n            );\n        }\n    }\n}\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import camelcase from 'camelcase';\nimport PropertyFactory from './Properties/PropertyFactory';\n\nexport default class Component {\n    #entity = null;\n    #ecs = null;\n    #props = {};\n    #isDestroyed = false;\n\n    static allowMultiple = false;\n    static keyProperty = null;\n    static properties = {};\n\n    static get type() {\n        return this.name;\n    }\n\n    get entity() {\n        return this.#entity;\n    }\n\n    get ecs() {\n        return this.#ecs;\n    }\n\n    get type() {\n        return this.constructor.name;\n    }\n\n    get isAttached() {\n        return Boolean(this.entity);\n    }\n\n    get isDestroyed() {\n        return this.#isDestroyed;\n    }\n\n    get allowMultiple() {\n        return this.constructor.allowMultiple;\n    }\n\n    get keyProperty() {\n        return this.constructor.keyProperty;\n    }\n\n    get properties() {\n        const ob = {};\n\n        for (const [key, value] of Object.entries(this.#props)) {\n            ob[key] = value.get();\n        }\n\n        return ob;\n    }\n\n    get key() {\n        return this[this.keyProperty];\n    }\n\n    constructor(ecs, properties = {}) {\n        this.#ecs = ecs;\n        this._defineProxies(properties);\n    }\n\n    serialize() {\n        return Object.entries(this.#props).reduce(\n            (o, [key, value]) => ({\n                ...o,\n                [key]: value.serialize(),\n            }),\n            {}\n        );\n    }\n\n    _onAttached(entity) {\n        this.#entity = entity;\n        this.ecs.queries.onComponentAdded(entity, this);\n        this.onAttached();\n    }\n\n    _onDetached() {\n        if (this.isAttached) {\n            this.onDetached();\n            const entity = this.#entity;\n\n            this.#entity = null;\n            this.ecs.queries.onComponentRemoved(entity, this);\n        }\n    }\n\n    _onDestroyed() {\n        this.#isDestroyed = true;\n        this.onDestroyed();\n\n        for (const prop of Object.values(this.#props)) {\n            prop.onDestroyed();\n        }\n    }\n\n    onAttached() {}\n\n    onDetached() {}\n\n    onDestroyed() {}\n\n    remove(destroy = true) {\n        if (this.isAttached) {\n            this.entity.remove(this);\n        }\n        if (destroy) {\n            this._onDestroyed();\n        }\n    }\n\n    destroy() {\n        this.remove(true);\n    }\n\n    _onEvent(evt) {\n        this.onEvent(evt);\n\n        const handlerName = camelcase(`on ${evt.name}`);\n\n        if (typeof this[handlerName] === 'function') {\n            this[handlerName](evt);\n        }\n    }\n\n    onEvent(evt) {}\n\n    _defaultPropertyValue(propertyName) {\n        const value = this.constructor.properties[propertyName];\n\n        if (value === '<EntityArray>') {\n            return [];\n        }\n\n        if (value === '<Entity>') {\n            return undefined;\n        }\n\n        return value;\n    }\n\n    _defineProxies(initialProperties) {\n        for (const key in this.constructor.properties) {\n            const initialValue = initialProperties.hasOwnProperty(key)\n                ? initialProperties[key]\n                : this._defaultPropertyValue(key);\n            const property = PropertyFactory.create(\n                this,\n                this.constructor.properties[key]\n            );\n\n            this.#props[key] = property;\n            Object.defineProperty(this, key, property.descriptor);\n            property.set(initialValue);\n        }\n    }\n}\n","import Component from '../Component';\nimport camelcase from 'camelcase';\n\nexport default class ComponentRegistry {\n    #nameCache = new Map();\n    #definitions = new Map();\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    register(component) {\n        this.#definitions.set(component.name, component);\n        this.#nameCache.set(component.name, camelcase(component.name));\n    }\n\n    getAccessor(type) {\n        if (this.#nameCache.has(type)) {\n            return this.#nameCache.get(type);\n        }\n\n        this.#nameCache.set(type, camelcase(type));\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this.#definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this.#ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\n    name = '';\n    inherit = [];\n    components = [];\n\n    constructor(ecs, name) {\n        this.ecs = ecs;\n        this.name = name;\n    }\n\n    addComponent(prefabComponent) {\n        this.components.push(prefabComponent);\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        this.inherit.forEach((parent) => {\n            parent.applyToEntity(entity, initialProps);\n        });\n\n        const arrComps = {};\n\n        this.components.forEach((component, i) => {\n            const definition = component.componentDef;\n            const accessor = this.ecs.components.getAccessor(definition.type);\n\n            let initialCompProps = {};\n\n            if (definition.allowMultiple) {\n                if (definition.keyProperty) {\n                    const key = component.properties[definition.keyProperty];\n\n                    if (\n                        initialProps[accessor] &&\n                        initialProps[accessor][key]\n                    ) {\n                        initialCompProps =\n                            initialProps[accessor][key];\n                    }\n                } else {\n                    if (!arrComps[accessor]) {\n                        arrComps[accessor] = 0;\n                    }\n\n                    if (\n                        initialProps[accessor] &&\n                        initialProps[accessor][\n                            arrComps[accessor]\n                        ]\n                    ) {\n                        initialCompProps =\n                            initialProps[accessor][\n                                arrComps[accessor]\n                            ];\n                    }\n\n                    arrComps[accessor]++;\n                }\n            } else {\n                initialCompProps = initialProps[accessor];\n            }\n\n            component.applyToEntity(entity, initialCompProps);\n        });\n\n        return entity;\n    }\n}\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    #prefabs = {};\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this.#ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this.#ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this.#ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this.#prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this.#prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this.#ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\n    data = {};\n    #prevented = false;\n    #handled = false;\n\n    get prevented() {\n        return this.#prevented;\n    }\n\n    get handled() {\n        return this.#handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this.#handled = true;\n        this.#prevented = true;\n    }\n\n    prevent() {\n        this.#prevented = true;\n    }\n}\n","import Component from './Component';\nimport EntityEvent from './EntityEvent';\n\nexport default class Entity {\n    #id = null;\n    #components = {};\n    #ecs = null;\n    #isDestroyed = false;\n\n    get ecs() {\n        return this.#ecs;\n    }\n\n    get components() {\n        return this.#components;\n    }\n\n    get isDestroyed() {\n        return this.#isDestroyed;\n    }\n\n    constructor(ecs, id = null) {\n        this.#ecs = ecs;\n        this.#id = id || ecs.generateId();\n        Object.defineProperty(this, 'id', {\n            value: this.#id,\n            enumerable: true,\n            writable: false,\n        });\n    }\n\n    has(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const hasType = this.hasOwnProperty(accessor);\n\n        if (hasType && key) {\n            return this[accessor].hasOwnProperty(key);\n        }\n\n        return hasType;\n    }\n\n    get(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const components = this[accessor];\n\n        if (components && key) {\n            return components[key];\n        }\n\n        return components;\n    }\n\n    destroy() {\n        this.#isDestroyed = true;\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component.destroy();\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent.destroy();\n                }\n            }\n        }\n\n        this.ecs.entities.onEntityDestroyed(this);\n    }\n\n    add(typeOrClass, properties = {}) {\n        const component = this.ecs.components.create(typeOrClass, properties);\n\n        if (!component) {\n            console.warn(\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\n            );\n            return false;\n        }\n\n        return this.attach(component);\n    }\n\n    attach(component) {\n        const accessor = this.ecs.components.getAccessor(component.type);\n\n        if (!component.allowMultiple) {\n            if (this.has(component.type)) {\n                console.warn(\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\n                );\n                return false;\n            }\n\n            this.components[accessor] = component;\n\n            Object.defineProperty(this, accessor, {\n                enumerable: true,\n                configurable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.keyProperty) {\n            if (!this.components[accessor]) {\n                this.components[accessor] = [];\n                Object.defineProperty(this, accessor, {\n                    configurable: true,\n                    enumerable: true,\n                    get() {\n                        return this.components[accessor];\n                    },\n                });\n            }\n\n            this.components[accessor].push(component);\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.key) {\n            console.warn(\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\n            );\n            return false;\n        }\n\n        if (!this.components[accessor]) {\n            this.components[accessor] = {};\n            Object.defineProperty(this, accessor, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n        }\n\n        this.components[accessor][component.key] = component;\n\n        component._onAttached(this);\n        this.ecs.queries.onComponentAdded(this, component);\n\n        return true;\n    }\n\n    owns(component) {\n        return component.entity === this;\n    }\n\n    remove(typeOrClassOrComponent, key = null) {\n        const isComponent = typeOrClassOrComponent instanceof Component;\n        key = isComponent ? typeOrClassOrComponent.key : key;\n\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\n\n        const accessor = this.ecs.components.getAccessor(definition.type);\n\n        if (definition.allowMultiple) {\n            if (!definition.keyProperty) {\n                if (isComponent) {\n                    const all = this.components[accessor];\n\n                    if (!all) {\n                        console.warn(\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n                        );\n                        return;\n                    }\n\n                    const index = all.indexOf(typeOrClassOrComponent);\n\n                    if (index > -1) {\n                        all.splice(index, 1);\n                        typeOrClassOrComponent._onDetached();\n\n                        if (all.length === 0) {\n                            delete this[accessor];\n                            delete this.components[accessor];\n                        }\n\n                        this.ecs.queries.onComponentRemoved(this);\n\n                        return true;\n                    }\n                } else {\n                    for (const instance of this.components[accessor]) {\n                        instance._onDetached();\n                    }\n\n                    delete this[accessor];\n                    delete this.components[accessor];\n                    this.ecs.queries.onComponentRemoved(this);\n\n                    return true;\n                }\n            }\n\n            if (!key) {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\n                );\n                return;\n            }\n\n            const all = this.components[accessor];\n            const component = all[key];\n\n            if (component) {\n                delete all[key];\n                component._onDetached();\n                if (Object.keys(all).length <= 0) {\n                    delete this[accessor];\n                    delete this.components[accessor];\n                }\n                this.ecs.queries.onComponentRemoved(this);\n\n                return component;\n            } else {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\n                );\n                return;\n            }\n        }\n\n        if (accessor in this) {\n            const component = this.components[accessor];\n\n            delete this[accessor];\n            delete this.components[accessor];\n            component._onDetached();\n            this.ecs.queries.onComponentRemoved(this);\n\n            return component;\n        }\n\n        console.warn(\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n        );\n    }\n\n    serialize() {\n        return Object.entries(this.components).reduce(\n            (o, [key, value]) => {\n                if (value instanceof Component) {\n                    return {\n                        ...o,\n                        [key]: value.serialize(),\n                    };\n                }\n\n                if (Array.isArray(value)) {\n                    return {\n                        ...o,\n                        [key]: value.map((v) => v.serialize()),\n                    };\n                }\n\n                return {\n                    ...o,\n                    [key]: Object.entries(value).reduce(\n                        (o2, [k2, v2]) => ({\n                            ...o2,\n                            [k2]: v2.serialize(),\n                        }),\n                        {}\n                    ),\n                };\n            },\n            {\n                id: this.id,\n            }\n        );\n    }\n\n    fireEvent(name, data) {\n        const evt = new EntityEvent(name, data);\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component._onEvent(evt);\n\n                if (evt.prevented) {\n                    return evt;\n                }\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent._onEvent(evt);\n\n                    if (evt.prevented) {\n                        return evt;\n                    }\n                }\n            }\n        }\n\n        return evt;\n    }\n}\n","import Entity from '../Entity';\nimport camelcase from 'camelcase';\n\nexport default class EntityRegistry {\n    #entities = new Map();\n    #ecs = null;\n    #refs = new Map();\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    get all() {\n        return this.#entities.values();\n    }\n\n    register(entity) {\n        this.#entities.set(entity.id, entity);\n\n        return entity;\n    }\n\n    get(id) {\n        return this.#entities.get(id);\n    }\n\n    createOrGetById(id) {\n        const entity = this.get(id);\n\n        if (entity) {\n            return entity;\n        }\n\n        return this.create(id);\n    }\n\n    create(id = undefined) {\n        const entity = new Entity(this.#ecs, id);\n\n        this.register(entity);\n\n        this.#ecs.queries.onEntityCreated(entity);\n\n        return entity;\n    }\n\n    destroy(entity) {\n        entity.destroy();\n    }\n\n    onEntityDestroyed(entity) {\n        this.cleanupRefs(entity);\n        this.#entities.delete(entity.id);\n        this.#ecs.queries.onEntityDestroyed(entity);\n    }\n\n    cleanupRefs(entity) {\n        const refs = this.#refs.get(entity.id);\n\n        if (!refs) {\n            return;\n        }\n\n        for (const ref of refs) {\n            ref.cleanupReference(entity);\n        }\n\n        delete this.#refs[entity.id];\n    }\n\n    addRef(entityId, property) {\n        if (!this.#refs.has(entityId)) {\n            this.#refs.set(entityId, new Set([property]));\n            return;\n        }\n\n        this.#refs.get(entityId).add(property);\n    }\n\n    removeRef(entityId, property) {\n        if (this.#refs.has(entityId)) {\n            this.#refs.get(entityId).delete(property);\n        }\n    }\n\n    serialize() {\n        const json = [];\n\n        this.#entities.forEach((entity) => {\n            json.push(entity.serialize());\n        });\n\n        return json;\n    }\n\n    deserialize(data) {\n        for (const entityData of data.entities) {\n            this.createOrGetById(entityData.id);\n        }\n\n        for (const entityData of data.entities) {\n            this.deserializeEntity(entityData);\n        }\n    }\n\n    deserializeEntity(data) {\n        const { id, ...componentData } = data;\n        const entity = this.createOrGetById(id);\n\n        Object.entries(componentData).forEach(([key, value]) => {\n            const type = camelcase(key, { pascalCase: true });\n            const definition = this.#ecs.components.get(type);\n\n            if (definition.allowMultiple) {\n                Object.values(value).forEach((d) => {\n                    entity.add(definition, d);\n                });\n            } else {\n                entity.add(definition, value);\n            }\n        });\n    }\n}\n","import merge from 'deepmerge';\n\nexport default class Query {\n    #ecs;\n    #filter;\n    #cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this.#ecs = ecs;\n        this.#filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this.#filter.any.length\n            ? this.#filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this.#filter.all.every((c) => entity.has(c));\n        const hasNone = !this.#filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    candidate(entity) {\n        if (this.isMatch(entity)) {\n            this.#cache.add(entity);\n            return true;\n        }\n\n        this.#cache.delete(entity);\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        this.#cache.delete(entity);\n    }\n\n    bustCache() {\n        this.#cache.clear();\n\n        for (const entity of this.#ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this.#cache;\n    }\n\n    get() {\n        return this.#cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    #ecs;\n    #queries = [];\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this.#ecs, filters);\n\n        this.#queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this.#queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this.#queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this.#queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this.#queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\nimport PrefabRegistry from './registries/PrefabRegistry';\nimport { nanoid } from 'nanoid/non-secure';\nimport EntityRegistry from './registries/EntityRegistry';\nimport QueryRegistry from './registries/QueryRegistry';\n\nexport default class Engine {\n    constructor() {\n        this.idGenerator = () => nanoid();\n        this.components = new ComponentRegistry(this);\n        this.prefabs = new PrefabRegistry(this);\n        this.entities = new EntityRegistry(this);\n        this.queries = new QueryRegistry(this);\n    }\n\n    generateId() {\n        return this.idGenerator();\n    }\n\n    createEntity() {\n        return this.entities.create();\n    }\n\n    createPrefab(nameOrClass, initialProps = {}) {\n        return this.prefabs.create(nameOrClass, initialProps);\n    }\n\n    destroyEntity(entity) {\n        return this.entities.destroy(entity);\n    }\n\n    registerPrefab(data) {\n        this.prefabs.deserialize(data);\n    }\n\n    registerComponent(component) {\n        this.components.register(component);\n    }\n\n    getEntity(id) {\n        return this.entities.get(id);\n    }\n\n    createComponent(type, properties) {\n        return this.components.create(type, properties);\n    }\n\n    createQuery(filters) {\n        return this.queries.create(filters);\n    }\n\n    serialize() {\n        return {\n            entities: this.entities.serialize(),\n        };\n    }\n\n    deserialize(data) {\n        if (data.id) {\n            return this.entities.deserializeEntity(data);\n        }\n\n        return this.entities.deserialize(data);\n    }\n}\n","const pixelRatio = window.devicePixelRatio || 1;\nlet canvas;\nlet ctx;\n\n// it's a PITA to mock canvas in jest so we just hack it when it's running\nif (process.env.NODE_ENV === \"test\") {\n  canvas = {\n    style: {},\n  };\n  ctx = {};\n} else {\n  canvas = document.querySelector(\"#canvas\");\n  ctx = canvas.getContext(\"2d\");\n}\n\nexport const layers = {\n  ground: 100,\n  tracks: 200,\n  items: 300,\n  player: 400,\n  abovePlayer: 500,\n  sky: 600,\n};\n\nexport const grid = {\n  width: 100,\n  height: 34,\n\n  map: {\n    width: 79,\n    height: 29,\n    x: 21,\n    y: 3,\n  },\n\n  log: {\n    width: 79,\n    height: 3,\n    x: 21,\n    y: 0,\n  },\n\n  hud: {\n    width: 20,\n    height: 34,\n    x: 0,\n    y: 0,\n  },\n\n  hud2: {\n    width: 79,\n    height: 2,\n    x: 21,\n    y: 32,\n  },\n\n  menu: {\n    width: 40,\n    height: 30,\n    x: 20,\n    y: 3,\n  },\n\n  menu2: {\n    width: 40,\n    height: 30,\n    x: 60,\n    y: 3,\n  },\n\n  menu3: {\n    width: 79,\n    height: 34,\n    x: 20,\n    y: 0,\n  },\n};\n\nconst font = \"Menlo\";\nconst lineHeight = 1.2;\n\nlet calculatedFontSize = window.innerWidth / grid.width;\nlet cellWidth = calculatedFontSize * pixelRatio;\nlet cellHeight = calculatedFontSize * lineHeight * pixelRatio;\nlet fontSize = calculatedFontSize * pixelRatio;\n\ncanvas.style.cssText = `width: ${calculatedFontSize * grid.width}; height: ${\n  calculatedFontSize * lineHeight * grid.height\n}`;\ncanvas.width = cellWidth * grid.width;\ncanvas.height = cellHeight * grid.height;\n\nctx.font = `normal ${fontSize}px ${font}`;\nctx.textAlign = \"center\";\nctx.textBaseline = \"middle\";\n\nconst drawBackground = (color, position, alpha = 1) => {\n  if (color === \"transparent\") return;\n\n  ctx.globalAlpha = alpha;\n  ctx.fillStyle = color;\n  ctx.fillRect(\n    position.x * cellWidth,\n    position.y * cellHeight,\n    cellWidth,\n    cellHeight\n  );\n};\n\nconst drawChar = ({ char, color, pos, fgA, size, rotate }) => {\n  ctx.globalAlpha = fgA;\n  ctx.fillStyle = color;\n  if (size) {\n    ctx.font = `${size}px sans-serif`;\n  }\n\n  if (!rotate) {\n    ctx.fillText(\n      char,\n      pos.x * cellWidth + cellWidth / 2,\n      pos.y * cellHeight + cellHeight / 2\n    );\n  }\n\n  if (rotate) {\n    const newx = pos.x * cellWidth + cellWidth / 2;\n    const newy = pos.y * cellHeight + cellHeight / 2;\n    ctx.save();\n    ctx.translate(newx, newy);\n    if (rotate === 90) {\n      ctx.rotate(Math.PI / 2); // 90\n    } else if (rotate === 180) {\n      ctx.rotate(Math.PI / 1); // 180 // upside down\n    } else if (rotate === 270) {\n      ctx.rotate(-Math.PI / 2); // 270\n    }\n    ctx.textAlign = \"center\";\n    ctx.fillText(char, 0, 0);\n    ctx.restore();\n  }\n};\n\nexport const drawCell = (entity, options = {}) => {\n  const { fg, bg, x, y, fgA = 1, bgA = 1, size = null, rotate } = options;\n  const {\n    appearance: { char, background, color },\n    position,\n  } = entity;\n\n  const bgColor = bg ? bg : background;\n  const charColor = fg ? fg : color;\n  const pos = x && y ? { x, y } : position;\n\n  drawBackground(bgColor, pos, bgA);\n  drawChar({ char, color: charColor, pos, fgA, size, rotate });\n};\n\nexport const clearCanvas = () =>\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\nexport const clearCell = (x, y) => {\n  ctx.clearRect(x, y, cellWidth, cellHeight);\n};\n\nexport const pxToCell = (ev) => {\n  const bounds = canvas.getBoundingClientRect();\n  const relativeX = ev.clientX - bounds.left;\n  const relativeY = ev.clientY - bounds.top;\n  const colPos = Math.trunc((relativeX / cellWidth) * pixelRatio);\n  const rowPos = Math.trunc((relativeY / cellHeight) * pixelRatio);\n\n  return [colPos, rowPos];\n};\n\nexport const onClick = (handler) => {\n  canvas.addEventListener(\"click\", (ev) => {\n    const cell = pxToCell(ev);\n    handler(cell[0], cell[1]);\n  });\n};\n\nexport const onMouseMove = (handler) => {\n  canvas.addEventListener(\"mousemove\", (ev) => {\n    const cell = pxToCell(ev);\n    handler(cell[0], cell[1]);\n  });\n};\n","import { Component } from \"geotic\";\n\nexport default class Position extends Component {\n  // px, py = previous x, previous y\n  static properties = { x: 0, y: 0, px: null, py: null };\n}\n","import { Component } from \"geotic\";\nimport { chars, colors } from \"../lib/graphics\";\nimport { layers } from \"../lib/canvas\";\n\nexport default class Appearance extends Component {\n  static properties = {\n    color: colors.defaultColor,\n    currentColor: this.color,\n    char: chars.defaultChar,\n    background: colors.defaultBGColor,\n    layer: layers.ground,\n  };\n\n  onSoil(evt) {\n    if (evt.data.color) {\n      this.currentColor = evt.data.color;\n    }\n  }\n\n  onClean(evt) {\n    this.currentColor = null;\n  }\n}\n","import { Component } from \"geotic\";\n\nexport default class Name extends Component {\n  static properties = {\n    first: \"\",\n    last: \"\",\n    nomen: \"\",\n  };\n}\n","import { Component } from \"geotic\";\n\nexport default class IsBlocking extends Component {}\n","import { gameState } from \"../state/ecs\";\n\nexport const log = (entry, entity) => {\n  // if entity is an empty array (from a filter on an entity group for player)\n  if (entity && Array.isArray(entity) && !entity.length) return;\n\n  if (Array.isArray(entity) && entity[0].name.nomen === \"player\") {\n    return gameState.adventureLog.push(entry);\n  }\n\n  if (!entity || entity.name.nomen === \"player\") {\n    return gameState.adventureLog.push(entry);\n  }\n};\n\nexport const innerLog = (entry, entity) => {\n  // if entity is an empty array (from a filter on an entity group for player)\n  if (entity && Array.isArray(entity) && !entity.length) return;\n\n  if (Array.isArray(entity) && entity[0].name.nomen === \"player\") {\n    return gameState.innerMonologue.push(entry);\n  }\n\n  if (!entity || entity.name.nomen === \"player\") {\n    return gameState.innerMonologue.push(entry);\n  }\n};\n","import { Component } from \"geotic\";\n\nexport default class canBeAbsorbed extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class CanLegend extends Component {}\n","import { Component } from \"geotic\";\nimport { innerLog } from \"../lib/adventure-log\";\n\nexport default class Description extends Component {\n  static properties = {\n    text: \"\",\n    default: \"\",\n    soiled: \"\",\n    dead: \"\",\n  };\n\n  onSoil(evt) {\n    if (evt.data.text && this.soiled) {\n      this.text = this.soiled\n        .replace(\"[SOILAGE]\", evt.data.text)\n        .replace(\"player\", \"my\");\n    }\n  }\n\n  onKill(evt) {\n    if (evt.data.text && this.dead) {\n      this.text = this.dead;\n    }\n\n    evt.handle();\n  }\n\n  onClean(evt) {\n    this.text = this.default;\n  }\n\n  onObserve(evt) {\n    innerLog({ text: this.text });\n  }\n}\n","import { Component } from \"geotic\";\n\nexport default class Layer400 extends Component {}\n","export const CLEAN = \"clean\";\nexport const CONTACT = \"contact\";\nexport const KILL = \"kill\";\nexport const OBSERVE = \"observe\";\nexport const SET_START_TIME = \"set-start-time\";\nexport const SOIL = \"soil\";\nexport const TAKE_DAMAGE = \"take-damage\";\n","var DiagonalMovement = {\r\n    Always: 1,\r\n    Never: 2,\r\n    IfAtMostOneObstacle: 3,\r\n    OnlyWhenNoObstacles: 4\r\n};\r\n\r\nmodule.exports = DiagonalMovement;","import { Component } from \"geotic\";\n\nexport default class IsInFov extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class Brain extends Component {\n  static properties = {\n    ai: \"\",\n  };\n}\n","import { Component } from \"geotic\";\nimport { colors } from \"../lib/graphics\";\n\nexport default class Blood extends Component {\n  static properties = {\n    color: colors.blood,\n  };\n}\n","import { Component } from \"geotic\";\n\nexport default class Health extends Component {\n  static properties = { current: 10, max: 10 };\n\n  // killing should happen here! not in movement - YEESH that needs a refactor :P\n  onTakeDamage(evt) {\n    this.current -= evt.data.amount;\n    evt.handle();\n  }\n}\n","import { Component } from \"geotic\";\n\nexport default class Layer300 extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class Layer100 extends Component {}\n","/**\r\n * Backtrace according to the parent records and return the path.\r\n * (including both start and end nodes)\r\n * @param {Node} node End node\r\n * @return {Array<Array<number>>} the path\r\n */\r\nfunction backtrace(node) {\r\n    var path = [[node.x, node.y]];\r\n    while (node.parent) {\r\n        node = node.parent;\r\n        path.push([node.x, node.y]);\r\n    }\r\n    return path.reverse();\r\n}\r\nexports.backtrace = backtrace;\r\n\r\n/**\r\n * Backtrace from start and end node, and return the path.\r\n * (including both start and end nodes)\r\n * @param {Node}\r\n * @param {Node}\r\n */\r\nfunction biBacktrace(nodeA, nodeB) {\r\n    var pathA = backtrace(nodeA),\r\n        pathB = backtrace(nodeB);\r\n    return pathA.concat(pathB.reverse());\r\n}\r\nexports.biBacktrace = biBacktrace;\r\n\r\n/**\r\n * Compute the length of the path.\r\n * @param {Array<Array<number>>} path The path\r\n * @return {number} The length of the path\r\n */\r\nfunction pathLength(path) {\r\n    var i, sum = 0, a, b, dx, dy;\r\n    for (i = 1; i < path.length; ++i) {\r\n        a = path[i - 1];\r\n        b = path[i];\r\n        dx = a[0] - b[0];\r\n        dy = a[1] - b[1];\r\n        sum += Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n    return sum;\r\n}\r\nexports.pathLength = pathLength;\r\n\r\n\r\n/**\r\n * Given the start and end coordinates, return all the coordinates lying\r\n * on the line formed by these coordinates, based on Bresenham's algorithm.\r\n * http://en.wikipedia.org/wiki/Bresenham's_line_algorithm#Simplification\r\n * @param {number} x0 Start x coordinate\r\n * @param {number} y0 Start y coordinate\r\n * @param {number} x1 End x coordinate\r\n * @param {number} y1 End y coordinate\r\n * @return {Array<Array<number>>} The coordinates on the line\r\n */\r\nfunction interpolate(x0, y0, x1, y1) {\r\n    var abs = Math.abs,\r\n        line = [],\r\n        sx, sy, dx, dy, err, e2;\r\n\r\n    dx = abs(x1 - x0);\r\n    dy = abs(y1 - y0);\r\n\r\n    sx = (x0 < x1) ? 1 : -1;\r\n    sy = (y0 < y1) ? 1 : -1;\r\n\r\n    err = dx - dy;\r\n\r\n    while (true) {\r\n        line.push([x0, y0]);\r\n\r\n        if (x0 === x1 && y0 === y1) {\r\n            break;\r\n        }\r\n        \r\n        e2 = 2 * err;\r\n        if (e2 > -dy) {\r\n            err = err - dy;\r\n            x0 = x0 + sx;\r\n        }\r\n        if (e2 < dx) {\r\n            err = err + dx;\r\n            y0 = y0 + sy;\r\n        }\r\n    }\r\n\r\n    return line;\r\n}\r\nexports.interpolate = interpolate;\r\n\r\n\r\n/**\r\n * Given a compressed path, return a new path that has all the segments\r\n * in it interpolated.\r\n * @param {Array<Array<number>>} path The path\r\n * @return {Array<Array<number>>} expanded path\r\n */\r\nfunction expandPath(path) {\r\n    var expanded = [],\r\n        len = path.length,\r\n        coord0, coord1,\r\n        interpolated,\r\n        interpolatedLen,\r\n        i, j;\r\n\r\n    if (len < 2) {\r\n        return expanded;\r\n    }\r\n\r\n    for (i = 0; i < len - 1; ++i) {\r\n        coord0 = path[i];\r\n        coord1 = path[i + 1];\r\n\r\n        interpolated = interpolate(coord0[0], coord0[1], coord1[0], coord1[1]);\r\n        interpolatedLen = interpolated.length;\r\n        for (j = 0; j < interpolatedLen - 1; ++j) {\r\n            expanded.push(interpolated[j]);\r\n        }\r\n    }\r\n    expanded.push(path[len - 1]);\r\n\r\n    return expanded;\r\n}\r\nexports.expandPath = expandPath;\r\n\r\n\r\n/**\r\n * Smoothen the give path.\r\n * The original path will not be modified; a new path will be returned.\r\n * @param {PF.Grid} grid\r\n * @param {Array<Array<number>>} path The path\r\n */\r\nfunction smoothenPath(grid, path) {\r\n    var len = path.length,\r\n        x0 = path[0][0],        // path start x\r\n        y0 = path[0][1],        // path start y\r\n        x1 = path[len - 1][0],  // path end x\r\n        y1 = path[len - 1][1],  // path end y\r\n        sx, sy,                 // current start coordinate\r\n        ex, ey,                 // current end coordinate\r\n        newPath,\r\n        i, j, coord, line, testCoord, blocked;\r\n\r\n    sx = x0;\r\n    sy = y0;\r\n    newPath = [[sx, sy]];\r\n\r\n    for (i = 2; i < len; ++i) {\r\n        coord = path[i];\r\n        ex = coord[0];\r\n        ey = coord[1];\r\n        line = interpolate(sx, sy, ex, ey);\r\n\r\n        blocked = false;\r\n        for (j = 1; j < line.length; ++j) {\r\n            testCoord = line[j];\r\n\r\n            if (!grid.isWalkableAt(testCoord[0], testCoord[1])) {\r\n                blocked = true;\r\n                break;\r\n            }\r\n        }\r\n        if (blocked) {\r\n            lastValidCoord = path[i - 1];\r\n            newPath.push(lastValidCoord);\r\n            sx = lastValidCoord[0];\r\n            sy = lastValidCoord[1];\r\n        }\r\n    }\r\n    newPath.push([x1, y1]);\r\n\r\n    return newPath;\r\n}\r\nexports.smoothenPath = smoothenPath;\r\n\r\n\r\n/**\r\n * Compress a path, remove redundant nodes without altering the shape\r\n * The original path is not modified\r\n * @param {Array<Array<number>>} path The path\r\n * @return {Array<Array<number>>} The compressed path\r\n */\r\nfunction compressPath(path) {\r\n\r\n    // nothing to compress\r\n    if(path.length < 3) {\r\n        return path;\r\n    }\r\n\r\n    var compressed = [],\r\n        sx = path[0][0], // start x\r\n        sy = path[0][1], // start y\r\n        px = path[1][0], // second point x\r\n        py = path[1][1], // second point y\r\n        dx = px - sx, // direction between the two points\r\n        dy = py - sy, // direction between the two points\r\n        lx, ly,\r\n        ldx, ldy,\r\n        sq, i;\r\n\r\n    // normalize the direction\r\n    sq = Math.sqrt(dx*dx + dy*dy);\r\n    dx /= sq;\r\n    dy /= sq;\r\n\r\n    // start the new path\r\n    compressed.push([sx,sy]);\r\n\r\n    for(i = 2; i < path.length; i++) {\r\n\r\n        // store the last point\r\n        lx = px;\r\n        ly = py;\r\n\r\n        // store the last direction\r\n        ldx = dx;\r\n        ldy = dy;\r\n\r\n        // next point\r\n        px = path[i][0];\r\n        py = path[i][1];\r\n\r\n        // next direction\r\n        dx = px - lx;\r\n        dy = py - ly;\r\n\r\n        // normalize\r\n        sq = Math.sqrt(dx*dx + dy*dy);\r\n        dx /= sq;\r\n        dy /= sq;\r\n\r\n        // if the direction has changed, store the point\r\n        if ( dx !== ldx || dy !== ldy ) {\r\n            compressed.push([lx,ly]);\r\n        }\r\n    }\r\n\r\n    // store the last point\r\n    compressed.push([px,py]);\r\n\r\n    return compressed;\r\n}\r\nexports.compressPath = compressPath;\r\n","import { Component } from \"geotic\";\n\nexport default class CanDijkstra extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class IsRevealed extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class canAbsorb extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class IsOpaque extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class MoveTo extends Component {\n  static properties = {\n    x: 0,\n    y: 0,\n    relative: true, // x,y are relative to current loc or exact\n  };\n}\n","/**\r\n * @namespace PF.Heuristic\r\n * @description A collection of heuristic functions.\r\n */\r\nmodule.exports = {\r\n\r\n  /**\r\n   * Manhattan distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} dx + dy\r\n   */\r\n  manhattan: function(dx, dy) {\r\n      return dx + dy;\r\n  },\r\n\r\n  /**\r\n   * Euclidean distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} sqrt(dx * dx + dy * dy)\r\n   */\r\n  euclidean: function(dx, dy) {\r\n      return Math.sqrt(dx * dx + dy * dy);\r\n  },\r\n\r\n  /**\r\n   * Octile distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} sqrt(dx * dx + dy * dy) for grids\r\n   */\r\n  octile: function(dx, dy) {\r\n      var F = Math.SQRT2 - 1;\r\n      return (dx < dy) ? F * dx + dy : F * dy + dx;\r\n  },\r\n\r\n  /**\r\n   * Chebyshev distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} max(dx, dy)\r\n   */\r\n  chebyshev: function(dx, dy) {\r\n      return Math.max(dx, dy);\r\n  }\r\n\r\n};\r\n","module.exports = require('./lib/heap');\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Base class for the Jump Point Search algorithm\r\n * @param {object} opt\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction JumpPointFinderBase(opt) {\r\n    opt = opt || {};\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.trackJumpRecursion = opt.trackJumpRecursion || false;\r\n}\r\n\r\n/**\r\n * Find and return the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nJumpPointFinderBase.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = this.openList = new Heap(function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        }),\r\n        startNode = this.startNode = grid.getNodeAt(startX, startY),\r\n        endNode = this.endNode = grid.getNodeAt(endX, endY), node;\r\n\r\n    this.grid = grid;\r\n\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n\r\n    // push the start node into the open list\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the open list is not empty\r\n    while (!openList.empty()) {\r\n        // pop the position of node which has the minimum `f` value.\r\n        node = openList.pop();\r\n        node.closed = true;\r\n\r\n        if (node === endNode) {\r\n            return Util.expandPath(Util.backtrace(endNode));\r\n        }\r\n\r\n        this._identifySuccessors(node);\r\n    }\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\n/**\r\n * Identify successors for the given node. Runs a jump point search in the\r\n * direction of each available neighbor, adding any points found to the open\r\n * list.\r\n * @protected\r\n */\r\nJumpPointFinderBase.prototype._identifySuccessors = function(node) {\r\n    var grid = this.grid,\r\n        heuristic = this.heuristic,\r\n        openList = this.openList,\r\n        endX = this.endNode.x,\r\n        endY = this.endNode.y,\r\n        neighbors, neighbor,\r\n        jumpPoint, i, l,\r\n        x = node.x, y = node.y,\r\n        jx, jy, dx, dy, d, ng, jumpNode,\r\n        abs = Math.abs, max = Math.max;\r\n\r\n    neighbors = this._findNeighbors(node);\r\n    for(i = 0, l = neighbors.length; i < l; ++i) {\r\n        neighbor = neighbors[i];\r\n        jumpPoint = this._jump(neighbor[0], neighbor[1], x, y);\r\n        if (jumpPoint) {\r\n\r\n            jx = jumpPoint[0];\r\n            jy = jumpPoint[1];\r\n            jumpNode = grid.getNodeAt(jx, jy);\r\n\r\n            if (jumpNode.closed) {\r\n                continue;\r\n            }\r\n\r\n            // include distance, as parent may not be immediately adjacent:\r\n            d = Heuristic.octile(abs(jx - x), abs(jy - y));\r\n            ng = node.g + d; // next `g` value\r\n\r\n            if (!jumpNode.opened || ng < jumpNode.g) {\r\n                jumpNode.g = ng;\r\n                jumpNode.h = jumpNode.h || heuristic(abs(jx - endX), abs(jy - endY));\r\n                jumpNode.f = jumpNode.g + jumpNode.h;\r\n                jumpNode.parent = node;\r\n\r\n                if (!jumpNode.opened) {\r\n                    openList.push(jumpNode);\r\n                    jumpNode.opened = true;\r\n                } else {\r\n                    openList.updateItem(jumpNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = JumpPointFinderBase;\r\n","import { colors } from \"../lib/graphics\";\nimport { Component } from \"geotic\";\n\nexport default class Animate extends Component {\n  static properties = {\n    startTime: null,\n    duration: 200,\n    animation: {\n      type: \"color\",\n      stops: [colors.defaultColor],\n    },\n  };\n\n  onSetStartTime(evt) {\n    this.startTime = evt.data.time;\n    evt.handle();\n  }\n\n  onRemove() {\n    console.log(\"Animation over!\");\n  }\n}\n","import { Component } from \"geotic\";\n\nexport default class isBoneless extends Component {}\n","import { Component } from \"geotic\";\nimport { colors } from \"../lib/graphics\";\nimport { SOIL } from \"../state/events\";\nimport { log } from \"../lib/adventure-log\";\n\nexport default class Soilage extends Component {\n  static allowMultiple = true;\n\n  static properties = {\n    color: colors.defaultColor,\n    name: \"blood\",\n    sourceName: \"\",\n    sourceEntityId: \"\",\n  };\n\n  onAttached(evt) {\n    if (\n      this.entity.name.nomen === \"player\" &&\n      this.entity.soilage.length === 1\n    ) {\n      log([\n        { text: \"COVERED IN BLOOD! \", fg: this.color },\n        { text: \"Watch out for \" },\n        { text: \"skellies\", fg: colors.skeleton },\n        { text: \" and \" },\n        { text: \"jellies\", fg: colors.gelatinousCube },\n        { text: \"!\" },\n      ]);\n    }\n\n    this.entity.fireEvent(SOIL, { color: this.color });\n  }\n\n  onClean(evt) {\n    if (this.entity && this.entity.name.nomen === \"player\") {\n      log([\n        { text: \"All clean, but watch out those pesky \" },\n        { text: \"goblins\", fg: colors.goblin },\n        { text: \" in groups!\" },\n      ]);\n    }\n\n    this.destroy();\n  }\n}\n","import { Component } from \"geotic\";\n\nexport default class Trap extends Component {\n  static allowMultiple = true;\n\n  static properties = {\n    triggered: false,\n    aoe: {\n      // damageAmount: 0,\n      // affectRate: 100,\n      // duration: 1,\n      // range: 2.5,\n      // aoeType: \"SOILAGE\",\n      // aoeData: {},\n    },\n  };\n\n  onContact(evt) {\n    if (!this.triggered) {\n      this.triggered = true;\n      this.entity.add(\"AreaOfEffect\", { ...this.aoe });\n      console.log(this.ecs.queries.aiEntities.get());\n    }\n  }\n}\n","import { Component } from \"geotic\";\n\nexport default class AreaOfEffect extends Component {\n  // static allowMultiple = true;\n\n  static properties = {\n    damageType: \"\",\n    damageAmount: 0,\n    affectRate: 100,\n    duration: 1,\n    range: 2.5,\n    aoeType: \"SOILAGE\",\n    aoeData: {},\n  };\n}\n","/**\r\n * A node in grid. \r\n * This class holds some basic information about a node and custom \r\n * attributes may be added, depending on the algorithms' needs.\r\n * @constructor\r\n * @param {number} x - The x coordinate of the node on the grid.\r\n * @param {number} y - The y coordinate of the node on the grid.\r\n * @param {boolean} [walkable] - Whether this node is walkable.\r\n */\r\nfunction Node(x, y, walkable) {\r\n    /**\r\n     * The x coordinate of the node on the grid.\r\n     * @type number\r\n     */\r\n    this.x = x;\r\n    /**\r\n     * The y coordinate of the node on the grid.\r\n     * @type number\r\n     */\r\n    this.y = y;\r\n    /**\r\n     * Whether this node can be walked through.\r\n     * @type boolean\r\n     */\r\n    this.walkable = (walkable === undefined ? true : walkable);\r\n}\r\n\r\nmodule.exports = Node;\r\n","var Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * A* path-finder. Based upon https://github.com/bgrins/javascript-astar\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching \r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n */\r\nfunction AStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    // When diagonal movement is allowed the manhattan heuristic is not\r\n    //admissible. It should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = new Heap(function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        }),\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        heuristic = this.heuristic,\r\n        diagonalMovement = this.diagonalMovement,\r\n        weight = this.weight,\r\n        abs = Math.abs, SQRT2 = Math.SQRT2,\r\n        node, neighbors, neighbor, i, l, x, y, ng;\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n\r\n    // push the start node into the open list\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the open list is not empty\r\n    while (!openList.empty()) {\r\n        // pop the position of node which has the minimum `f` value.\r\n        node = openList.pop();\r\n        node.closed = true;\r\n\r\n        // if reached the end position, construct the path and return it\r\n        if (node === endNode) {\r\n            return Util.backtrace(endNode);\r\n        }\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h || weight * heuristic(abs(x - endX), abs(y - endY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    openList.push(neighbor);\r\n                    neighbor.opened = true;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    openList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n    } // end while not open list empty\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = AStarFinder;\r\n","var Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * A* path-finder.\r\n * based upon https://github.com/bgrins/javascript-astar\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n */\r\nfunction BiAStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    //When diagonal movement is allowed the manhattan heuristic is not admissible\r\n    //It should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBiAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var cmp = function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        },\r\n        startOpenList = new Heap(cmp),\r\n        endOpenList = new Heap(cmp),\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        heuristic = this.heuristic,\r\n        diagonalMovement = this.diagonalMovement,\r\n        weight = this.weight,\r\n        abs = Math.abs, SQRT2 = Math.SQRT2,\r\n        node, neighbors, neighbor, i, l, x, y, ng,\r\n        BY_START = 1, BY_END = 2;\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    // and push it into the start open list\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n    startOpenList.push(startNode);\r\n    startNode.opened = BY_START;\r\n\r\n    // set the `g` and `f` value of the end node to be 0\r\n    // and push it into the open open list\r\n    endNode.g = 0;\r\n    endNode.f = 0;\r\n    endOpenList.push(endNode);\r\n    endNode.opened = BY_END;\r\n\r\n    // while both the open lists are not empty\r\n    while (!startOpenList.empty() && !endOpenList.empty()) {\r\n\r\n        // pop the position of start node which has the minimum `f` value.\r\n        node = startOpenList.pop();\r\n        node.closed = true;\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened === BY_END) {\r\n                return Util.biBacktrace(node, neighbor);\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h ||\r\n                    weight * heuristic(abs(x - endX), abs(y - endY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    startOpenList.push(neighbor);\r\n                    neighbor.opened = BY_START;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    startOpenList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n\r\n\r\n        // pop the position of end node which has the minimum `f` value.\r\n        node = endOpenList.pop();\r\n        node.closed = true;\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened === BY_START) {\r\n                return Util.biBacktrace(neighbor, node);\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h ||\r\n                    weight * heuristic(abs(x - startX), abs(y - startY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    endOpenList.push(neighbor);\r\n                    neighbor.opened = BY_END;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    endOpenList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n    } // end while not open list empty\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BiAStarFinder;\r\n","module.exports = require('./src/PathFinding');\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","import { get, set } from \"lodash\";\n\nexport default class Cache {\n  allChars = [];\n  entitiesAtLocation = {};\n  dijkstraMaps = {\n    player: {},\n    playerReverse: {},\n  };\n\n  serialize() {\n    const entitiesAtLocation = Object.keys(this.entitiesAtLocation).reduce(\n      (acc, val) => {\n        acc[val] = [...this.entitiesAtLocation[val]];\n        return acc;\n      },\n      {}\n    );\n\n    const dijkstraMaps = this.dijkstraMaps;\n\n    return {\n      entitiesAtLocation,\n      dijkstraMaps,\n    };\n  }\n\n  clear() {\n    this.entitiesAtLocation = {};\n    this.dijkstraMaps = {};\n  }\n\n  deserialize(data) {\n    this.clear();\n\n    this.dijkstraMaps = data.dijkstraMaps;\n    this.entitiesAtLocation = Object.keys(data.entitiesAtLocation).reduce(\n      (acc, val) => {\n        acc[val] = new Set(data.entitiesAtLocation[val]);\n        return acc;\n      },\n      {}\n    );\n  }\n\n  addSet(name, key, value) {\n    if (!this.validate(name, key, \"addSet\")) return;\n\n    if (this[name][key]) {\n      this[name][key].add(value);\n    } else {\n      this[name][key] = new Set();\n      this[name][key].add(value);\n    }\n  }\n\n  readSet(name, key, value) {\n    if (!this.validate(name, key, \"readSet\")) return;\n\n    if (value) {\n      return this[name][key].get(value);\n    }\n\n    return this[name][key];\n  }\n\n  addObj(name, path, value) {\n    set(this[name], path, value);\n  }\n\n  readObj(name, path) {\n    return get(this[name], path);\n  }\n\n  delete(name, key, value) {\n    if (!this.validate(name, key, \"delete\")) return;\n\n    if (this[name][key].has(value)) {\n      this[name][key].delete(value);\n    }\n  }\n\n  print(name, key) {\n    if (!name) {\n      return console.log(this);\n    }\n\n    if (name && !key) {\n      return console.log(this[name]);\n    }\n\n    if (name && key) {\n      return console.log(this[name][key]);\n    }\n  }\n\n  validate(name, key, operation) {\n    if (operation === \"add\") {\n      if (!this[name]) {\n        if (process.env.NODE_ENV === \"development\") {\n          console.warn(`Cannot \"${operation}\". Cache \"${name}\" does not exist`);\n        }\n        return false;\n      }\n    }\n\n    if (operation === \"readSet\") {\n      if (!this[name]) {\n        if (process.env.NODE_ENV === \"development\") {\n          console.warn(`Cannot \"${operation}\". Cache \"${name}\" does not exist`);\n        }\n        return false;\n      }\n\n      if (key && !this[name][key]) {\n        if (process.env.NODE_ENV === \"development\") {\n          console.warn(\n            `Cannot \"${operation}\". Cache ${name}.${key} does not exist`\n          );\n        }\n        return false;\n      }\n    }\n\n    if (operation === \"read\") {\n      if (!this[name]) {\n        if (process.env.NODE_ENV === \"development\") {\n          console.warn(`Cannot \"${operation}\". Cache \"${name}\" does not exist`);\n        }\n        return false;\n      }\n\n      if (key && !this[name][key]) {\n        if (process.env.NODE_ENV === \"development\") {\n          console.warn(\n            `Cannot \"${operation}\". Cache ${name}.${key} does not exist`\n          );\n        }\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n","import { Component } from \"geotic\";\n\nexport default class IsDead extends Component {}\n","import Appearance from \"../components/Appearance\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport Position from \"../components/Position\";\nimport { chars, colors } from \"../lib/graphics\";\nimport Layer300 from \"../components/Layer300\";\nimport Name from \"../components/Name\";\nimport CanLegend from \"../components/CanLegend\";\n\nexport default {\n  name: \"BonfirePrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.campfire,\n        char: chars.campfire,\n      },\n    },\n    { type: IsBlocking },\n    { type: Layer300 },\n    { type: Position },\n    { type: Name, properties: { nomen: \"bonfire\" } },\n    { type: CanLegend },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport CanBeAbsorbed from \"../components/CanBeAbsorbed\";\nimport Layer400 from \"../components/Layer400\";\nimport Name from \"../components/Name\";\nimport Position from \"../components/Position\";\n\nimport { chars, colors } from \"../lib/graphics\";\n\nexport default {\n  name: \"CharPrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: \"#FFF\",\n        char: chars.floor,\n      },\n    },\n    { type: CanBeAbsorbed },\n    { type: Layer400 },\n    { type: Position },\n    { type: Name, properties: { nomen: \"char\" } },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport Description from \"../components/Description\";\nimport Layer100 from \"../components/Layer100\";\nimport Name from \"../components/Name\";\nimport Position from \"../components/Position\";\nimport CanBeAbsorbed from \"../components/CanBeAbsorbed\";\n\nimport { chars, colors } from \"../lib/graphics\";\n\nexport default {\n  name: \"FloorPrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.floor,\n        char: chars.floor,\n      },\n    },\n    { type: Layer100 },\n    { type: Position },\n    { type: Name, properties: { nomen: \"floor\" } },\n    { type: CanBeAbsorbed },\n    {\n      type: Description,\n      properties: {\n        text: \"The hard stone is cold beneath my feet.\",\n        default: \"The hard stone is cold beneath my feet.\",\n        soiled: \"The floor is sticky with [SOILAGE].\",\n        dead: \"\",\n      },\n    },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport Position from \"../components/Position\";\nimport { chars, colors } from \"../lib/graphics\";\nimport Layer300 from \"../components/Layer300\";\nimport Name from \"../components/Name\";\nimport CanLegend from \"../components/CanLegend\";\nimport Description from \"../components/Description\";\n\nexport default {\n  name: \"FountainPrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.fountain,\n        char: chars.fountain,\n      },\n    },\n    { type: IsBlocking },\n    { type: Layer300 },\n    { type: Position },\n    { type: Name, properties: { nomen: \"fountain\" } },\n    { type: CanLegend },\n\n    {\n      type: Description,\n      properties: {\n        text: \"It's a fountain!\",\n        default: \"It's a fountain!\",\n        soiled: \"\",\n        dead: \"\",\n      },\n    },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport Blood from \"../components/Blood\";\nimport isBoneless from \"../components/isBoneless\";\nimport Brain from \"../components/Brain\";\nimport CanAbsorb from \"../components/CanAbsorb\";\nimport Description from \"../components/Description\";\nimport Health from \"../components/Health\";\nimport Position from \"../components/Position\";\nimport { colors } from \"../lib/graphics\";\nimport Layer400 from \"../components/Layer400\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport Name from \"../components/Name\";\nimport CanLegend from \"../components/CanLegend\";\n\nexport default {\n  name: \"GelatinousCubePrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: \"\",\n        char: \"\",\n        background: colors.gelatinousCube,\n      },\n    },\n    { type: Blood, properties: { color: colors.gelatinousCube } },\n    { type: Brain, properties: { ai: \"gelatinousCube\" } },\n    { type: CanAbsorb },\n    { type: Health, properties: { current: 100, max: 100 } },\n    { type: IsBlocking },\n    { type: isBoneless },\n    { type: Layer400 },\n    { type: Name, properties: { nomen: \"Jelly\" } },\n    { type: Position },\n    { type: CanLegend },\n    {\n      type: Description,\n      properties: {\n        text: \"It's a woobly, wobbly jelly!\",\n        default: \"It's a woobly, wobbly jelly!\",\n        soiled: \"\",\n        dead: \"Chunks of jelly are scattered about.\",\n      },\n    },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport Blood from \"../components/Blood\";\nimport Brain from \"../components/Brain\";\nimport Description from \"../components/Description\";\nimport Health from \"../components/Health\";\nimport Position from \"../components/Position\";\nimport { chars, colors } from \"../lib/graphics\";\nimport Layer400 from \"../components/Layer400\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport Name from \"../components/Name\";\nimport CanLegend from \"../components/CanLegend\";\nimport CanBeAbsorbed from \"../components/CanBeAbsorbed\";\n\nexport default {\n  name: \"GoblinPrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.goblin,\n        char: chars.goblin,\n      },\n    },\n    { type: Blood },\n    { type: CanBeAbsorbed },\n    { type: Brain, properties: { ai: \"goblin\" } },\n    { type: Health, properties: { current: 10, max: 10 } },\n    { type: IsBlocking },\n    { type: Layer400 },\n    { type: Name, properties: { nomen: \"goblin\" } },\n    { type: Position },\n    { type: CanLegend },\n    {\n      type: Description,\n      properties: {\n        text: \"It's a stinky snarling goblin.\",\n        default: \"It's a stinky snarling goblin.\",\n        soiled: \"The floor is sticky with [SOILAGE].\",\n        dead: \"The crumpled corpse of a dirty goblin lay at my feet.\",\n      },\n    },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport Blood from \"../components/Blood\";\nimport Health from \"../components/Health\";\nimport Position from \"../components/Position\";\nimport { chars, colors } from \"../lib/graphics\";\nimport Layer400 from \"../components/Layer400\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport Name from \"../components/Name\";\nimport CanLegend from \"../components/CanLegend\";\nimport CanBeAbsorbed from \"../components/CanBeAbsorbed\";\n\nexport default {\n  name: \"PlayerPrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.player,\n        char: chars.player,\n      },\n    },\n    { type: Blood },\n    { type: CanBeAbsorbed },\n    { type: Health, properties: { current: 50, max: 50 } },\n    { type: IsBlocking },\n    { type: Layer400 },\n    { type: Name, properties: { nomen: \"player\" } },\n    { type: Position },\n    { type: CanLegend },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport Brain from \"../components/Brain\";\nimport Health from \"../components/Health\";\nimport Position from \"../components/Position\";\nimport { chars, colors } from \"../lib/graphics\";\nimport Layer400 from \"../components/Layer400\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport Name from \"../components/Name\";\nimport CanLegend from \"../components/CanLegend\";\nimport Description from \"../components/Description\";\nimport CanBeAbsorbed from \"../components/CanBeAbsorbed\";\n\nexport default {\n  name: \"SkeletonPrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.skeleton,\n        char: chars.skeleton,\n      },\n    },\n    { type: Brain, properties: { ai: \"skeleton\" } },\n    { type: CanBeAbsorbed },\n    { type: Health, properties: { current: 30, max: 30 } },\n    { type: IsBlocking },\n    { type: Layer400 },\n    { type: Name, properties: { nomen: \"skeleton\" } },\n    { type: Position },\n    { type: CanLegend },\n    {\n      type: Description,\n      properties: {\n        text: \"It's a dead eyed skeleton!\",\n        default: \"It's a dead eyed skeleton!\",\n        soiled: \"\",\n        dead: \"The shattered remains of a skeleton are on the floor.\",\n      },\n    },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport Blood from \"../components/Blood\";\nimport Position from \"../components/Position\";\nimport { chars, colors } from \"../lib/graphics\";\nimport Layer300 from \"../components/Layer300\";\nimport Name from \"../components/Name\";\nimport Description from \"../components/Description\";\nimport Trap from \"../components/Trap\";\n\nexport default {\n  name: \"TrapPrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.blood,\n        char: chars.floor,\n      },\n    },\n    { type: Blood },\n    { type: Layer300 },\n    { type: Position },\n    { type: Name, properties: { nomen: \"trap\" } },\n    {\n      type: Trap,\n      properties: {\n        aoe: {\n          damageAmount: 0,\n          affectRate: 72,\n          duration: 1,\n          range: 1.5,\n          aoeType: \"SOILAGE\",\n          aoeData: {\n            name: \"blood\",\n            color: colors.blood,\n          },\n        },\n      },\n    },\n    {\n      type: Description,\n      properties: {\n        text: \"...\",\n        default: \"...\",\n        soiled: \"\",\n        dead: \"\",\n      },\n    },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport IsOpaque from \"../components/IsOpaque\";\nimport Layer100 from \"../components/Layer100\";\nimport Position from \"../components/Position\";\nimport Description from \"../components/Description\";\n\nimport { chars, colors } from \"../lib/graphics\";\nimport Name from \"../components/Name\";\nimport CanBeAbsorbed from \"../components/CanBeAbsorbed\";\n\nexport default {\n  name: \"WallPrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.wall,\n        char: chars.wall,\n      },\n    },\n    { type: IsBlocking },\n    { type: CanBeAbsorbed },\n    { type: IsOpaque },\n    { type: Layer100 },\n    { type: Position },\n    { type: Name, properties: { nomen: \"wall\" } },\n    {\n      type: Description,\n      properties: {\n        text: \"The wall is hard and unmoving.\",\n        default: \"The wall is hard and unmoving.\",\n        soiled: \"The wall is splattered with [SOILAGE]\",\n        dead: \"\",\n      },\n    },\n  ],\n};\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = {\r\n    'Heap'                      : require('heap'),\r\n    'Node'                      : require('./core/Node'),\r\n    'Grid'                      : require('./core/Grid'),\r\n    'Util'                      : require('./core/Util'),\r\n    'DiagonalMovement'          : require('./core/DiagonalMovement'),\r\n    'Heuristic'                 : require('./core/Heuristic'),\r\n    'AStarFinder'               : require('./finders/AStarFinder'),\r\n    'BestFirstFinder'           : require('./finders/BestFirstFinder'),\r\n    'BreadthFirstFinder'        : require('./finders/BreadthFirstFinder'),\r\n    'DijkstraFinder'            : require('./finders/DijkstraFinder'),\r\n    'BiAStarFinder'             : require('./finders/BiAStarFinder'),\r\n    'BiBestFirstFinder'         : require('./finders/BiBestFirstFinder'),\r\n    'BiBreadthFirstFinder'      : require('./finders/BiBreadthFirstFinder'),\r\n    'BiDijkstraFinder'          : require('./finders/BiDijkstraFinder'),\r\n    'IDAStarFinder'             : require('./finders/IDAStarFinder'),\r\n    'JumpPointFinder'           : require('./finders/JumpPointFinder'),\r\n};\r\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  if (typeof module !== \"undefined\" && module !== null ? module.exports : void 0) {\n    module.exports = Heap;\n  } else {\n    window.Heap = Heap;\n  }\n\n}).call(this);\n","var Node = require('./Node');\r\nvar DiagonalMovement = require('./DiagonalMovement');\r\n\r\n/**\r\n * The Grid class, which serves as the encapsulation of the layout of the nodes.\r\n * @constructor\r\n * @param {number|Array<Array<(number|boolean)>>} width_or_matrix Number of columns of the grid, or matrix\r\n * @param {number} height Number of rows of the grid.\r\n * @param {Array<Array<(number|boolean)>>} [matrix] - A 0-1 matrix\r\n *     representing the walkable status of the nodes(0 or false for walkable).\r\n *     If the matrix is not supplied, all the nodes will be walkable.  */\r\nfunction Grid(width_or_matrix, height, matrix) {\r\n    var width;\r\n\r\n    if (typeof width_or_matrix !== 'object') {\r\n        width = width_or_matrix;\r\n    } else {\r\n        height = width_or_matrix.length;\r\n        width = width_or_matrix[0].length;\r\n        matrix = width_or_matrix;\r\n    }\r\n\r\n    /**\r\n     * The number of columns of the grid.\r\n     * @type number\r\n     */\r\n    this.width = width;\r\n    /**\r\n     * The number of rows of the grid.\r\n     * @type number\r\n     */\r\n    this.height = height;\r\n\r\n    /**\r\n     * A 2D array of nodes.\r\n     */\r\n    this.nodes = this._buildNodes(width, height, matrix);\r\n}\r\n\r\n/**\r\n * Build and return the nodes.\r\n * @private\r\n * @param {number} width\r\n * @param {number} height\r\n * @param {Array<Array<number|boolean>>} [matrix] - A 0-1 matrix representing\r\n *     the walkable status of the nodes.\r\n * @see Grid\r\n */\r\nGrid.prototype._buildNodes = function(width, height, matrix) {\r\n    var i, j,\r\n        nodes = new Array(height);\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        nodes[i] = new Array(width);\r\n        for (j = 0; j < width; ++j) {\r\n            nodes[i][j] = new Node(j, i);\r\n        }\r\n    }\r\n\r\n\r\n    if (matrix === undefined) {\r\n        return nodes;\r\n    }\r\n\r\n    if (matrix.length !== height || matrix[0].length !== width) {\r\n        throw new Error('Matrix size does not fit');\r\n    }\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        for (j = 0; j < width; ++j) {\r\n            if (matrix[i][j]) {\r\n                // 0, false, null will be walkable\r\n                // while others will be un-walkable\r\n                nodes[i][j].walkable = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return nodes;\r\n};\r\n\r\n\r\nGrid.prototype.getNodeAt = function(x, y) {\r\n    return this.nodes[y][x];\r\n};\r\n\r\n\r\n/**\r\n * Determine whether the node at the given position is walkable.\r\n * (Also returns false if the position is outside the grid.)\r\n * @param {number} x - The x coordinate of the node.\r\n * @param {number} y - The y coordinate of the node.\r\n * @return {boolean} - The walkability of the node.\r\n */\r\nGrid.prototype.isWalkableAt = function(x, y) {\r\n    return this.isInside(x, y) && this.nodes[y][x].walkable;\r\n};\r\n\r\n\r\n/**\r\n * Determine whether the position is inside the grid.\r\n * XXX: `grid.isInside(x, y)` is wierd to read.\r\n * It should be `(x, y) is inside grid`, but I failed to find a better\r\n * name for this method.\r\n * @param {number} x\r\n * @param {number} y\r\n * @return {boolean}\r\n */\r\nGrid.prototype.isInside = function(x, y) {\r\n    return (x >= 0 && x < this.width) && (y >= 0 && y < this.height);\r\n};\r\n\r\n\r\n/**\r\n * Set whether the node on the given position is walkable.\r\n * NOTE: throws exception if the coordinate is not inside the grid.\r\n * @param {number} x - The x coordinate of the node.\r\n * @param {number} y - The y coordinate of the node.\r\n * @param {boolean} walkable - Whether the position is walkable.\r\n */\r\nGrid.prototype.setWalkableAt = function(x, y, walkable) {\r\n    this.nodes[y][x].walkable = walkable;\r\n};\r\n\r\n\r\n/**\r\n * Get the neighbors of the given node.\r\n *\r\n *     offsets      diagonalOffsets:\r\n *  +---+---+---+    +---+---+---+\r\n *  |   | 0 |   |    | 0 |   | 1 |\r\n *  +---+---+---+    +---+---+---+\r\n *  | 3 |   | 1 |    |   |   |   |\r\n *  +---+---+---+    +---+---+---+\r\n *  |   | 2 |   |    | 3 |   | 2 |\r\n *  +---+---+---+    +---+---+---+\r\n *\r\n *  When allowDiagonal is true, if offsets[i] is valid, then\r\n *  diagonalOffsets[i] and\r\n *  diagonalOffsets[(i + 1) % 4] is valid.\r\n * @param {Node} node\r\n * @param {DiagonalMovement} diagonalMovement\r\n */\r\nGrid.prototype.getNeighbors = function(node, diagonalMovement) {\r\n    var x = node.x,\r\n        y = node.y,\r\n        neighbors = [],\r\n        s0 = false, d0 = false,\r\n        s1 = false, d1 = false,\r\n        s2 = false, d2 = false,\r\n        s3 = false, d3 = false,\r\n        nodes = this.nodes;\r\n\r\n    // ↑\r\n    if (this.isWalkableAt(x, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x]);\r\n        s0 = true;\r\n    }\r\n    // →\r\n    if (this.isWalkableAt(x + 1, y)) {\r\n        neighbors.push(nodes[y][x + 1]);\r\n        s1 = true;\r\n    }\r\n    // ↓\r\n    if (this.isWalkableAt(x, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x]);\r\n        s2 = true;\r\n    }\r\n    // ←\r\n    if (this.isWalkableAt(x - 1, y)) {\r\n        neighbors.push(nodes[y][x - 1]);\r\n        s3 = true;\r\n    }\r\n\r\n    if (diagonalMovement === DiagonalMovement.Never) {\r\n        return neighbors;\r\n    }\r\n\r\n    if (diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\r\n        d0 = s3 && s0;\r\n        d1 = s0 && s1;\r\n        d2 = s1 && s2;\r\n        d3 = s2 && s3;\r\n    } else if (diagonalMovement === DiagonalMovement.IfAtMostOneObstacle) {\r\n        d0 = s3 || s0;\r\n        d1 = s0 || s1;\r\n        d2 = s1 || s2;\r\n        d3 = s2 || s3;\r\n    } else if (diagonalMovement === DiagonalMovement.Always) {\r\n        d0 = true;\r\n        d1 = true;\r\n        d2 = true;\r\n        d3 = true;\r\n    } else {\r\n        throw new Error('Incorrect value of diagonalMovement');\r\n    }\r\n\r\n    // ↖\r\n    if (d0 && this.isWalkableAt(x - 1, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x - 1]);\r\n    }\r\n    // ↗\r\n    if (d1 && this.isWalkableAt(x + 1, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x + 1]);\r\n    }\r\n    // ↘\r\n    if (d2 && this.isWalkableAt(x + 1, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x + 1]);\r\n    }\r\n    // ↙\r\n    if (d3 && this.isWalkableAt(x - 1, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x - 1]);\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\n\r\n/**\r\n * Get a clone of this grid.\r\n * @return {Grid} Cloned grid.\r\n */\r\nGrid.prototype.clone = function() {\r\n    var i, j,\r\n\r\n        width = this.width,\r\n        height = this.height,\r\n        thisNodes = this.nodes,\r\n\r\n        newGrid = new Grid(width, height),\r\n        newNodes = new Array(height);\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        newNodes[i] = new Array(width);\r\n        for (j = 0; j < width; ++j) {\r\n            newNodes[i][j] = new Node(j, i, thisNodes[i][j].walkable);\r\n        }\r\n    }\r\n\r\n    newGrid.nodes = newNodes;\r\n\r\n    return newGrid;\r\n};\r\n\r\nmodule.exports = Grid;\r\n","var AStarFinder = require('./AStarFinder');\r\n\r\n/**\r\n * Best-First-Search path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction BestFirstFinder(opt) {\r\n    AStarFinder.call(this, opt);\r\n\r\n    var orig = this.heuristic;\r\n    this.heuristic = function(dx, dy) {\r\n        return orig(dx, dy) * 1000000;\r\n    };\r\n}\r\n\r\nBestFirstFinder.prototype = new AStarFinder();\r\nBestFirstFinder.prototype.constructor = BestFirstFinder;\r\n\r\nmodule.exports = BestFirstFinder;\r\n","var Util = require('../core/Util');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Breadth-First-Search path finder.\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BreadthFirstFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBreadthFirstFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = [],\r\n        diagonalMovement = this.diagonalMovement,\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        neighbors, neighbor, node, i, l;\r\n\r\n    // push the start pos into the queue\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the queue is not empty\r\n    while (openList.length) {\r\n        // take the front node from the queue\r\n        node = openList.shift();\r\n        node.closed = true;\r\n\r\n        // reached the end position\r\n        if (node === endNode) {\r\n            return Util.backtrace(endNode);\r\n        }\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            // skip this neighbor if it has been inspected before\r\n            if (neighbor.closed || neighbor.opened) {\r\n                continue;\r\n            }\r\n\r\n            openList.push(neighbor);\r\n            neighbor.opened = true;\r\n            neighbor.parent = node;\r\n        }\r\n    }\r\n    \r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BreadthFirstFinder;\r\n","var AStarFinder = require('./AStarFinder');\r\n\r\n/**\r\n * Dijkstra path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction DijkstraFinder(opt) {\r\n    AStarFinder.call(this, opt);\r\n    this.heuristic = function(dx, dy) {\r\n        return 0;\r\n    };\r\n}\r\n\r\nDijkstraFinder.prototype = new AStarFinder();\r\nDijkstraFinder.prototype.constructor = DijkstraFinder;\r\n\r\nmodule.exports = DijkstraFinder;\r\n","var BiAStarFinder = require('./BiAStarFinder');\r\n\r\n/**\r\n * Bi-direcitional Best-First-Search path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction BiBestFirstFinder(opt) {\r\n    BiAStarFinder.call(this, opt);\r\n\r\n    var orig = this.heuristic;\r\n    this.heuristic = function(dx, dy) {\r\n        return orig(dx, dy) * 1000000;\r\n    };\r\n}\r\n\r\nBiBestFirstFinder.prototype = new BiAStarFinder();\r\nBiBestFirstFinder.prototype.constructor = BiBestFirstFinder;\r\n\r\nmodule.exports = BiBestFirstFinder;\r\n","var Util = require('../core/Util');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Bi-directional Breadth-First-Search path finder.\r\n * @constructor\r\n * @param {object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BiBreadthFirstFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBiBreadthFirstFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        startOpenList = [], endOpenList = [],\r\n        neighbors, neighbor, node,\r\n        diagonalMovement = this.diagonalMovement,\r\n        BY_START = 0, BY_END = 1,\r\n        i, l;\r\n\r\n    // push the start and end nodes into the queues\r\n    startOpenList.push(startNode);\r\n    startNode.opened = true;\r\n    startNode.by = BY_START;\r\n\r\n    endOpenList.push(endNode);\r\n    endNode.opened = true;\r\n    endNode.by = BY_END;\r\n\r\n    // while both the queues are not empty\r\n    while (startOpenList.length && endOpenList.length) {\r\n\r\n        // expand start open list\r\n\r\n        node = startOpenList.shift();\r\n        node.closed = true;\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened) {\r\n                // if this node has been inspected by the reversed search,\r\n                // then a path is found.\r\n                if (neighbor.by === BY_END) {\r\n                    return Util.biBacktrace(node, neighbor);\r\n                }\r\n                continue;\r\n            }\r\n            startOpenList.push(neighbor);\r\n            neighbor.parent = node;\r\n            neighbor.opened = true;\r\n            neighbor.by = BY_START;\r\n        }\r\n\r\n        // expand end open list\r\n\r\n        node = endOpenList.shift();\r\n        node.closed = true;\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened) {\r\n                if (neighbor.by === BY_START) {\r\n                    return Util.biBacktrace(neighbor, node);\r\n                }\r\n                continue;\r\n            }\r\n            endOpenList.push(neighbor);\r\n            neighbor.parent = node;\r\n            neighbor.opened = true;\r\n            neighbor.by = BY_END;\r\n        }\r\n    }\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BiBreadthFirstFinder;\r\n","var BiAStarFinder = require('./BiAStarFinder');\r\n\r\n/**\r\n * Bi-directional Dijkstra path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BiDijkstraFinder(opt) {\r\n    BiAStarFinder.call(this, opt);\r\n    this.heuristic = function(dx, dy) {\r\n        return 0;\r\n    };\r\n}\r\n\r\nBiDijkstraFinder.prototype = new BiAStarFinder();\r\nBiDijkstraFinder.prototype.constructor = BiDijkstraFinder;\r\n\r\nmodule.exports = BiDijkstraFinder;\r\n","var Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar Node       = require('../core/Node');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Iterative Deeping A Star (IDA*) path-finder.\r\n *\r\n * Recursion based on:\r\n *   http://www.apl.jhu.edu/~hall/AI-Programming/IDA-Star.html\r\n *\r\n * Path retracing based on:\r\n *  V. Nageshwara Rao, Vipin Kumar and K. Ramesh\r\n *  \"A Parallel Implementation of Iterative-Deeping-A*\", January 1987.\r\n *  ftp://ftp.cs.utexas.edu/.snapshot/hourly.1/pub/AI-Lab/tech-reports/UT-AI-TR-87-46.pdf\r\n *\r\n * @author Gerard Meier (www.gerardmeier.com)\r\n *\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n * @param {boolean} opt.trackRecursion Whether to track recursion for\r\n *     statistical purposes.\r\n * @param {number} opt.timeLimit Maximum execution time. Use <= 0 for infinite.\r\n */\r\nfunction IDAStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n    this.trackRecursion = opt.trackRecursion || false;\r\n    this.timeLimit = opt.timeLimit || Infinity; // Default: no time limit.\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    // When diagonal movement is allowed the manhattan heuristic is not\r\n    // admissible, it should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path. When an empty array is returned, either\r\n * no path is possible, or the maximum execution time is reached.\r\n *\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nIDAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    // Used for statistics:\r\n    var nodesVisited = 0;\r\n\r\n    // Execution time limitation:\r\n    var startTime = new Date().getTime();\r\n\r\n    // Heuristic helper:\r\n    var h = function(a, b) {\r\n        return this.heuristic(Math.abs(b.x - a.x), Math.abs(b.y - a.y));\r\n    }.bind(this);\r\n\r\n    // Step cost from a to b:\r\n    var cost = function(a, b) {\r\n        return (a.x === b.x || a.y === b.y) ? 1 : Math.SQRT2;\r\n    };\r\n\r\n    /**\r\n     * IDA* search implementation.\r\n     *\r\n     * @param {Node} The node currently expanding from.\r\n     * @param {number} Cost to reach the given node.\r\n     * @param {number} Maximum search depth (cut-off value).\r\n     * @param {Array<Array<number>>} The found route.\r\n     * @param {number} Recursion depth.\r\n     *\r\n     * @return {Object} either a number with the new optimal cut-off depth,\r\n     * or a valid node instance, in which case a path was found.\r\n     */\r\n    var search = function(node, g, cutoff, route, depth) {\r\n        nodesVisited++;\r\n\r\n        // Enforce timelimit:\r\n        if (this.timeLimit > 0 &&\r\n            new Date().getTime() - startTime > this.timeLimit * 1000) {\r\n            // Enforced as \"path-not-found\".\r\n            return Infinity;\r\n        }\r\n\r\n        var f = g + h(node, end) * this.weight;\r\n\r\n        // We've searched too deep for this iteration.\r\n        if (f > cutoff) {\r\n            return f;\r\n        }\r\n\r\n        if (node == end) {\r\n            route[depth] = [node.x, node.y];\r\n            return node;\r\n        }\r\n\r\n        var min, t, k, neighbour;\r\n\r\n        var neighbours = grid.getNeighbors(node, this.diagonalMovement);\r\n\r\n        // Sort the neighbours, gives nicer paths. But, this deviates\r\n        // from the original algorithm - so I left it out.\r\n        //neighbours.sort(function(a, b){\r\n        //    return h(a, end) - h(b, end);\r\n        //});\r\n\r\n        \r\n        /*jshint -W084 *///Disable warning: Expected a conditional expression and instead saw an assignment\r\n        for (k = 0, min = Infinity; neighbour = neighbours[k]; ++k) {\r\n        /*jshint +W084 *///Enable warning: Expected a conditional expression and instead saw an assignment\r\n            if (this.trackRecursion) {\r\n                // Retain a copy for visualisation. Due to recursion, this\r\n                // node may be part of other paths too.\r\n                neighbour.retainCount = neighbour.retainCount + 1 || 1;\r\n\r\n                if(neighbour.tested !== true) {\r\n                    neighbour.tested = true;\r\n                }\r\n            }\r\n\r\n            t = search(neighbour, g + cost(node, neighbour), cutoff, route, depth + 1);\r\n\r\n            if (t instanceof Node) {\r\n                route[depth] = [node.x, node.y];\r\n\r\n                // For a typical A* linked list, this would work:\r\n                // neighbour.parent = node;\r\n                return t;\r\n            }\r\n\r\n            // Decrement count, then determine whether it's actually closed.\r\n            if (this.trackRecursion && (--neighbour.retainCount) === 0) {\r\n                neighbour.tested = false;\r\n            }\r\n\r\n            if (t < min) {\r\n                min = t;\r\n            }\r\n        }\r\n\r\n        return min;\r\n\r\n    }.bind(this);\r\n\r\n    // Node instance lookups:\r\n    var start = grid.getNodeAt(startX, startY);\r\n    var end   = grid.getNodeAt(endX, endY);\r\n\r\n    // Initial search depth, given the typical heuristic contraints,\r\n    // there should be no cheaper route possible.\r\n    var cutOff = h(start, end);\r\n\r\n    var j, route, t;\r\n\r\n    // With an overflow protection.\r\n    for (j = 0; true; ++j) {\r\n\r\n        route = [];\r\n\r\n        // Search till cut-off depth:\r\n        t = search(start, 0, cutOff, route, 0);\r\n\r\n        // Route not possible, or not found in time limit.\r\n        if (t === Infinity) {\r\n            return [];\r\n        }\r\n\r\n        // If t is a node, it's also the end node. Route is now\r\n        // populated with a valid path to the end node.\r\n        if (t instanceof Node) {\r\n            return route;\r\n        }\r\n\r\n        // Try again, this time with a deeper cut-off. The t score\r\n        // is the closest we got to the end node.\r\n        cutOff = t;\r\n    }\r\n\r\n    // This _should_ never to be reached.\r\n    return [];\r\n};\r\n\r\nmodule.exports = IDAStarFinder;\r\n","/**\r\n * @author aniero / https://github.com/aniero\r\n */\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\nvar JPFNeverMoveDiagonally = require('./JPFNeverMoveDiagonally');\r\nvar JPFAlwaysMoveDiagonally = require('./JPFAlwaysMoveDiagonally');\r\nvar JPFMoveDiagonallyIfNoObstacles = require('./JPFMoveDiagonallyIfNoObstacles');\r\nvar JPFMoveDiagonallyIfAtMostOneObstacle = require('./JPFMoveDiagonallyIfAtMostOneObstacle');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm\r\n * @param {Object} opt\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {DiagonalMovement} opt.diagonalMovement Condition under which diagonal\r\n *      movement will be allowed.\r\n */\r\nfunction JumpPointFinder(opt) {\r\n    opt = opt || {};\r\n    if (opt.diagonalMovement === DiagonalMovement.Never) {\r\n        return new JPFNeverMoveDiagonally(opt);\r\n    } else if (opt.diagonalMovement === DiagonalMovement.Always) {\r\n        return new JPFAlwaysMoveDiagonally(opt);\r\n    } else if (opt.diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\r\n        return new JPFMoveDiagonallyIfNoObstacles(opt);\r\n    } else {\r\n        return new JPFMoveDiagonallyIfAtMostOneObstacle(opt);\r\n    }\r\n}\r\n\r\nmodule.exports = JumpPointFinder;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm allowing only horizontal\r\n * or vertical movements.\r\n */\r\nfunction JPFNeverMoveDiagonally(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFNeverMoveDiagonally.prototype = new JumpPointFinderBase();\r\nJPFNeverMoveDiagonally.prototype.constructor = JPFNeverMoveDiagonally;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFNeverMoveDiagonally.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    if (dx !== 0) {\r\n        if ((grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1)) ||\r\n            (grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1))) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    else if (dy !== 0) {\r\n        if ((grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy)) ||\r\n            (grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        //When moving vertically, must check for horizontal jump points\r\n        if (this._jump(x + 1, y, x, y) || this._jump(x - 1, y, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(\"Only horizontal and vertical movements are allowed\");\r\n    }\r\n\r\n    return this._jump(x + dx, y + dy, x, y);\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFNeverMoveDiagonally.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        if (dx !== 0) {\r\n            if (grid.isWalkableAt(x, y - 1)) {\r\n                neighbors.push([x, y - 1]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + 1)) {\r\n                neighbors.push([x, y + 1]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n        }\r\n        else if (dy !== 0) {\r\n            if (grid.isWalkableAt(x - 1, y)) {\r\n                neighbors.push([x - 1, y]);\r\n            }\r\n            if (grid.isWalkableAt(x + 1, y)) {\r\n                neighbors.push([x + 1, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Never);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFNeverMoveDiagonally;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which always moves\r\n * diagonally irrespective of the number of obstacles.\r\n */\r\nfunction JPFAlwaysMoveDiagonally(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFAlwaysMoveDiagonally.prototype = new JumpPointFinderBase();\r\nJPFAlwaysMoveDiagonally.prototype.constructor = JPFAlwaysMoveDiagonally;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFAlwaysMoveDiagonally.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if( dx !== 0 ) { // moving along x\r\n            if((grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1)) ||\r\n               (grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else {\r\n            if((grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y)) ||\r\n               (grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n    }\r\n\r\n    return this._jump(x + dx, y + dy, x, y);\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFAlwaysMoveDiagonally.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y + dy)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x - dx, y)) {\r\n                neighbors.push([x - dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x, y - dy)) {\r\n                neighbors.push([x + dx, y - dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            if(dx === 0) {\r\n                if (grid.isWalkableAt(x, y + dy)) {\r\n                    neighbors.push([x, y + dy]);\r\n                }\r\n                if (!grid.isWalkableAt(x + 1, y)) {\r\n                    neighbors.push([x + 1, y + dy]);\r\n                }\r\n                if (!grid.isWalkableAt(x - 1, y)) {\r\n                    neighbors.push([x - 1, y + dy]);\r\n                }\r\n            }\r\n            else {\r\n                if (grid.isWalkableAt(x + dx, y)) {\r\n                    neighbors.push([x + dx, y]);\r\n                }\r\n                if (!grid.isWalkableAt(x, y + 1)) {\r\n                    neighbors.push([x + dx, y + 1]);\r\n                }\r\n                if (!grid.isWalkableAt(x, y - 1)) {\r\n                    neighbors.push([x + dx, y - 1]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Always);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFAlwaysMoveDiagonally;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which moves\r\n * diagonally only when there are no obstacles.\r\n */\r\nfunction JPFMoveDiagonallyIfNoObstacles(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFMoveDiagonallyIfNoObstacles.prototype = new JumpPointFinderBase();\r\nJPFMoveDiagonallyIfNoObstacles.prototype.constructor = JPFMoveDiagonallyIfNoObstacles;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFMoveDiagonallyIfNoObstacles.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        // if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            // (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            // return [x, y];\r\n        // }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if (dx !== 0) {\r\n            if ((grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1)) ||\r\n                (grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else if (dy !== 0) {\r\n            if ((grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy)) ||\r\n                (grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy))) {\r\n                return [x, y];\r\n            }\r\n            // When moving vertically, must check for horizontal jump points\r\n            // if (this._jump(x + 1, y, x, y) || this._jump(x - 1, y, x, y)) {\r\n                // return [x, y];\r\n            // }\r\n        }\r\n    }\r\n\r\n    // moving diagonally, must make sure one of the vertical/horizontal\r\n    // neighbors is open to allow the path\r\n    if (grid.isWalkableAt(x + dx, y) && grid.isWalkableAt(x, y + dy)) {\r\n        return this._jump(x + dx, y + dy, x, y);\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFMoveDiagonallyIfNoObstacles.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy) && grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            var isNextWalkable;\r\n            if (dx !== 0) {\r\n                isNextWalkable = grid.isWalkableAt(x + dx, y);\r\n                var isTopWalkable = grid.isWalkableAt(x, y + 1);\r\n                var isBottomWalkable = grid.isWalkableAt(x, y - 1);\r\n\r\n                if (isNextWalkable) {\r\n                    neighbors.push([x + dx, y]);\r\n                    if (isTopWalkable) {\r\n                        neighbors.push([x + dx, y + 1]);\r\n                    }\r\n                    if (isBottomWalkable) {\r\n                        neighbors.push([x + dx, y - 1]);\r\n                    }\r\n                }\r\n                if (isTopWalkable) {\r\n                    neighbors.push([x, y + 1]);\r\n                }\r\n                if (isBottomWalkable) {\r\n                    neighbors.push([x, y - 1]);\r\n                }\r\n            }\r\n            else if (dy !== 0) {\r\n                isNextWalkable = grid.isWalkableAt(x, y + dy);\r\n                var isRightWalkable = grid.isWalkableAt(x + 1, y);\r\n                var isLeftWalkable = grid.isWalkableAt(x - 1, y);\r\n\r\n                if (isNextWalkable) {\r\n                    neighbors.push([x, y + dy]);\r\n                    if (isRightWalkable) {\r\n                        neighbors.push([x + 1, y + dy]);\r\n                    }\r\n                    if (isLeftWalkable) {\r\n                        neighbors.push([x - 1, y + dy]);\r\n                    }\r\n                }\r\n                if (isRightWalkable) {\r\n                    neighbors.push([x + 1, y]);\r\n                }\r\n                if (isLeftWalkable) {\r\n                    neighbors.push([x - 1, y]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.OnlyWhenNoObstacles);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFMoveDiagonallyIfNoObstacles;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which moves\r\n * diagonally only when there is at most one obstacle.\r\n */\r\nfunction JPFMoveDiagonallyIfAtMostOneObstacle(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype = new JumpPointFinderBase();\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype.constructor = JPFMoveDiagonallyIfAtMostOneObstacle;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if( dx !== 0 ) { // moving along x\r\n            if((grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1)) ||\r\n               (grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else {\r\n            if((grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y)) ||\r\n               (grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n    }\r\n\r\n    // moving diagonally, must make sure one of the vertical/horizontal\r\n    // neighbors is open to allow the path\r\n    if (grid.isWalkableAt(x + dx, y) || grid.isWalkableAt(x, y + dy)) {\r\n        return this._jump(x + dx, y + dy, x, y);\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy) || grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x - dx, y) && grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x - dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x, y - dy) && grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y - dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            if(dx === 0) {\r\n                if (grid.isWalkableAt(x, y + dy)) {\r\n                    neighbors.push([x, y + dy]);\r\n                    if (!grid.isWalkableAt(x + 1, y)) {\r\n                        neighbors.push([x + 1, y + dy]);\r\n                    }\r\n                    if (!grid.isWalkableAt(x - 1, y)) {\r\n                        neighbors.push([x - 1, y + dy]);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (grid.isWalkableAt(x + dx, y)) {\r\n                    neighbors.push([x + dx, y]);\r\n                    if (!grid.isWalkableAt(x, y + 1)) {\r\n                        neighbors.push([x + dx, y + 1]);\r\n                    }\r\n                    if (!grid.isWalkableAt(x, y - 1)) {\r\n                        neighbors.push([x + dx, y - 1]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.IfAtMostOneObstacle);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFMoveDiagonallyIfAtMostOneObstacle;\r\n","import { grid } from \"../lib/canvas\";\nimport { sample } from \"lodash\";\n\nexport const CARDINAL = [\n  { x: 0, y: -1 }, // N\n  { x: 1, y: 0 }, // E\n  { x: 0, y: 1 }, // S\n  { x: -1, y: 0 }, // W\n];\n\nexport const DIAGONAL = [\n  { x: 1, y: -1 }, // NE\n  { x: 1, y: 1 }, // SE\n  { x: -1, y: 1 }, // SW\n  { x: -1, y: -1 }, // NW\n];\n\nexport const ALL = [...CARDINAL, ...DIAGONAL];\n\nexport const toCell = (cellOrId) => {\n  let cell = cellOrId;\n  if (typeof cell === \"string\") cell = idToCell(cell);\n\n  return cell;\n};\n\nexport const toLocId = (cellOrId) => {\n  let locId = cellOrId;\n  if (typeof locId !== \"string\") locId = cellToId(locId);\n\n  return locId;\n};\n\nconst insideCircle = (center, tile, radius) => {\n  const dx = center.x - tile.x;\n  const dy = center.y - tile.y;\n  const distance_squared = dx * dx + dy * dy;\n  return distance_squared <= radius * radius;\n};\n\nexport const circle = (center, radius) => {\n  const diameter = radius % 1 ? radius * 2 : radius * 2 + 1;\n  const top = center.y - radius;\n  const bottom = center.y + radius;\n  const left = center.x - radius;\n  const right = center.x + radius;\n\n  const locsIds = [];\n\n  for (let y = top; y <= bottom; y++) {\n    for (let x = left; x <= right; x++) {\n      const cx = Math.ceil(x);\n      const cy = Math.ceil(y);\n      if (insideCircle(center, { x: cx, y: cy }, radius)) {\n        locsIds.push(`${cx},${cy}`);\n      }\n    }\n  }\n\n  return locsIds;\n};\n\nexport const rectangle = ({ x, y, width, height, hasWalls }, tileProps) => {\n  const tiles = {};\n\n  const x1 = x;\n  const x2 = x + width;\n  const y1 = y;\n  const y2 = y + height;\n\n  if (hasWalls) {\n    for (let yi = y1 + 1; yi < y2 - 1; yi++) {\n      for (let xi = x1 + 1; xi < x2 - 1; xi++) {\n        tiles[`${xi},${yi}`] = { x: xi, y: yi, ...tileProps };\n      }\n    }\n  } else {\n    for (let yi = y1; yi < y2; yi++) {\n      for (let xi = x1; xi < x2; xi++) {\n        tiles[`${xi},${yi}`] = { x: xi, y: yi, ...tileProps };\n      }\n    }\n  }\n\n  const center = {\n    x: Math.round((x1 + x2) / 2),\n    y: Math.round((y1 + y2) / 2),\n  };\n\n  return { x1, x2, y1, y2, center, hasWalls, tiles };\n};\n\nexport const rectsIntersect = (rect1, rect2) => {\n  return (\n    rect1.x1 <= rect2.x2 &&\n    rect1.x2 >= rect2.x1 &&\n    rect1.y1 <= rect2.y2 &&\n    rect1.y2 >= rect2.y1\n  );\n};\n\nexport const distance = (cell1, cell2) => {\n  const x = Math.pow(cell2.x - cell1.x, 2);\n  const y = Math.pow(cell2.y - cell1.y, 2);\n  return Math.floor(Math.sqrt(x + y));\n};\n\nexport const idToCell = (id) => {\n  const coords = id.split(\",\");\n  return { x: parseInt(coords[0], 10), y: parseInt(coords[1], 10) };\n};\n\nexport const cellToId = ({ x, y }) => `${x},${y}`;\n\nexport const isOnMapEdge = (x, y) => {\n  const { width, height, x: mapX, y: mapY } = grid.map;\n\n  if (x === mapX) return true; // west edge\n  if (y === mapY) return true; // north edge\n  if (x === mapX + width - 1) return true; // east edge\n  if (y === mapY + height - 1) return true; // south edge\n  return false;\n};\n\nexport const getNeighbors = ({ x, y }, direction = CARDINAL) => {\n  const points = [];\n  for (let dir of direction) {\n    let candidate = {\n      x: x + dir.x,\n      y: y + dir.y,\n    };\n    if (\n      candidate.x >= 0 &&\n      candidate.x < grid.width &&\n      candidate.y >= 0 &&\n      candidate.y < grid.height\n    ) {\n      points.push(candidate);\n    }\n  }\n  return points;\n};\n\n// export const getNeighborIds = (x, y) => getNeighbors({ x, y }).map(cellToId);\n\nexport const getNeighborIds = (cellOrId, direction = \"CARDINAL\") => {\n  let cell = toCell(cellOrId);\n\n  if (direction === \"CARDINAL\") {\n    return getNeighbors(cell, CARDINAL).map(cellToId);\n  }\n\n  if (direction === \"DIAGONAL\") {\n    return getNeighbors(cell, DIAGONAL).map(cellToId);\n  }\n\n  if (direction === \"ALL\") {\n    return [\n      ...getNeighbors(cell, CARDINAL).map(cellToId),\n      ...getNeighbors(cell, DIAGONAL).map(cellToId),\n    ];\n  }\n};\n\nexport const isNeighbor = (a, b) => {\n  let posA = a;\n  if (typeof posA === \"string\") {\n    posA = idToCell(a);\n  }\n\n  let posB = b;\n  if (typeof posB === \"string\") {\n    posB = idToCell(b);\n  }\n\n  const { x: ax, y: ay } = posA;\n  const { x: bx, y: by } = posB;\n\n  if (\n    (ax - bx === 1 && ay - by === 0) ||\n    (ax - bx === 0 && ay - by === -1) ||\n    (ax - bx === -1 && ay - by === 0) ||\n    (ax - bx === 0 && ay - by === 1)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const randomNeighbor = (startX, startY) => {\n  const direction = sample(CARDINAL);\n  const x = startX + direction.x;\n  const y = startY + direction.y;\n  return { x, y };\n};\n\nexport const getNeighbor = (x, y, dir) => {\n  const dirMap = { N: 0, E: 1, S: 2, W: 3 };\n  const direction = CARDINAL[dirMap[dir]];\n  return {\n    x: x + direction.x,\n    y: y + direction.y,\n  };\n};\n\nexport const getDirection = (a, b) => {\n  const cellA = toCell(a);\n  const cellB = toCell(b);\n\n  const { x: ax, y: ay } = cellA;\n  const { x: bx, y: by } = cellB;\n\n  let dir;\n\n  if (ax - bx === 1 && ay - by === 0) dir = \"→\";\n  if (ax - bx === 0 && ay - by === -1) dir = \"↑\";\n  if (ax - bx === -1 && ay - by === 0) dir = \"←\";\n  if (ax - bx === 0 && ay - by === 1) dir = \"↓\";\n\n  return dir;\n};\n","import { some } from \"lodash\";\nimport ecs, { cache } from \"../state/ecs\";\nimport { toLocId, getNeighborIds, toCell } from \"./grid\";\n\n// goals: Array of { x, y } positions\nexport const dijkstra = (goals, weights = []) => {\n  const frontier = goals.map(toLocId);\n\n  const distance = frontier.reduce((acc, val, idx) => {\n    acc[val] = weights[idx] || 0;\n    return acc;\n  }, {});\n\n  while (frontier.length) {\n    const current = frontier.shift();\n\n    // current entity position component\n    const cell = toCell(current);\n    const neighborLocIds = getNeighborIds(cell);\n\n    neighborLocIds.forEach((neighborId) => {\n      if (!distance[neighborId]) {\n        const esAtLoc = cache.readSet(\"entitiesAtLocation\", neighborId);\n        let neighborIds = false;\n        if (esAtLoc) {\n          neighborIds = [...esAtLoc];\n        }\n        if (\n          // check if location exists and is NOT blocking (no entity at location can be blocking AND brainless)\n          neighborIds &&\n          !some(neighborIds, (x) => {\n            return (\n              ecs.getEntity(x).has(\"IsBlocking\") &&\n              !ecs.getEntity(x).has(\"Brain\")\n            );\n          })\n        ) {\n          let dscore = distance[current] + 1;\n          distance[neighborId] = dscore;\n          frontier.push(neighborId);\n        }\n      }\n    });\n  }\n\n  // normalize goals to their weights or 0\n  goals.forEach((goal, idx) => {\n    const id = toLocId(goal);\n    distance[id] = weights[idx] || 0;\n  });\n\n  return distance;\n};\n\nexport const dijkstraReverse = (dMap, coeff = -1.2) => {\n  const dR = {};\n\n  Object.keys(dMap).forEach((x) => {\n    dR[x] = dMap[x] * coeff;\n  });\n\n  const goals = Object.keys(dR);\n  const weights = goals.map((x) => dR[x]);\n\n  return dijkstra(goals, weights);\n};\n","import ecs from \"../state/ecs\";\n\nimport Animate from \"../components/Animate\";\nimport Appearance from \"../components/Appearance\";\nimport AreaOfEffect from \"../components/AreaOfEffect\";\nimport Brain from \"../components/Brain\";\nimport CanAbsorb from \"../components/CanAbsorb\";\nimport CanBeAbsorbed from \"../components/CanBeAbsorbed\";\nimport CanDijkstra from \"../components/CanDijkstra\";\nimport CanLegend from \"../components/CanLegend\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport IsInFov from \"../components/IsInFov\";\nimport IsOpaque from \"../components/IsOpaque\";\nimport IsRevealed from \"../components/IsRevealed\";\nimport Layer100 from \"../components/Layer100\";\nimport Layer300 from \"../components/Layer300\";\nimport Layer400 from \"../components/Layer400\";\nimport MoveTo from \"../components/MoveTo\";\nimport Position from \"../components/Position\";\nimport Soilage from \"../components/Soilage\";\n\nexport const aiEntities = ecs.createQuery({\n  all: [Brain],\n});\n\nexport const aiEntitiesInFov = ecs.createQuery({\n  all: [Brain, IsInFov],\n});\n\nexport const animatingEntities = ecs.createQuery({\n  all: [Animate, IsInFov],\n});\n\nexport const aoeEntities = ecs.createQuery({\n  all: [AreaOfEffect],\n});\n\nexport const blockingEntities = ecs.createQuery({\n  all: [IsBlocking, Position],\n});\n\nexport const dijkstraAbleEntities = ecs.createQuery({\n  all: [CanDijkstra],\n});\n\nexport const inFovEntities = ecs.createQuery({\n  all: [IsInFov],\n});\n\nexport const layer100Entities = ecs.createQuery({\n  all: [Appearance, Layer100, Position],\n  any: [IsInFov, IsRevealed],\n});\n\nexport const layer300Entities = ecs.createQuery({\n  all: [Appearance, Layer300, Position],\n  any: [IsInFov, IsRevealed],\n});\n\nexport const layer400Entities = ecs.createQuery({\n  all: [Appearance, Layer400, Position],\n  any: [IsInFov],\n});\n\nexport const legendEntities = ecs.createQuery({\n  all: [CanLegend, IsInFov],\n});\n\nexport const movableEntities = ecs.createQuery({\n  all: [MoveTo, Position],\n});\n\nexport const opaqueEntities = ecs.createQuery({\n  all: [IsOpaque],\n});\n\nexport const renderableEntities = ecs.createQuery({\n  all: [Position, Appearance],\n});\n\nexport const soiledEntities = ecs.createQuery({\n  all: [Soilage, CanBeAbsorbed],\n  none: [CanAbsorb],\n});\n\necs.queries.aiEntities = aiEntities;\necs.queries.aiEntitiesInFov = aiEntitiesInFov;\necs.queries.animatingEntities = animatingEntities;\necs.queries.aoeEntities = aoeEntities;\necs.queries.blockingEntities = blockingEntities;\necs.queries.dijkstraAbleEntities = dijkstraAbleEntities;\necs.queries.inFovEntities = inFovEntities;\necs.queries.layer100Entities = layer100Entities;\necs.queries.layer300Entities = layer300Entities;\necs.queries.layer400Entities = layer400Entities;\necs.queries.legendEntities = legendEntities;\necs.queries.movableEntities = movableEntities;\necs.queries.opaqueEntities = opaqueEntities;\necs.queries.renderableEntities = renderableEntities;\necs.queries.soiledEntities = soiledEntities;\n","import PF from \"pathfinding\";\nimport { get, some, times } from \"lodash\";\nimport ecs, { cache } from \"../state/ecs\";\nimport { sample } from \"lodash\";\nimport { ALL, toCell, getNeighborIds } from \"./grid\";\n\nexport const drunkenWalk = () => sample(ALL);\n\nexport const walkDijkstra = (entity, dMapName) => {\n  const neighbors = getNeighborIds(entity.position, \"ALL\");\n  const inf = 1000000;\n  let score = inf;\n  let nextPosition = {};\n  neighbors.forEach((locId) => {\n    const dScore = get(cache, `dijkstraMaps[${dMapName}][${locId}]`, inf);\n    if (dScore < score) {\n      score = dScore;\n      nextPosition = toCell(locId);\n    }\n  });\n  return nextPosition;\n};\n\nconst baseMatrix = [];\ntimes(34, () => baseMatrix.push(new Array(100).fill(0)));\n\nexport const aStar = (start, goal) => {\n  const matrix = [...baseMatrix];\n\n  Object.keys(cache.entitiesAtLocation).forEach((locId) => {\n    if (\n      some([...cache.readObj(\"entitiesAtLocation\", locId)], (eId) => {\n        return ecs.getEntity(eId).isBlocking;\n      })\n    ) {\n      const cell = toCell(locId);\n\n      matrix[cell.y][cell.x] = 1;\n    }\n  });\n\n  matrix[start.y][start.x] = 0;\n  matrix[goal.y][goal.x] = 0;\n\n  const grid = new PF.Grid(matrix);\n  const finder = new PF.AStarFinder({\n    allowDiagonal: true,\n    dontCrossCorners: true,\n  });\n\n  const path = finder.findPath(start.x, start.y, goal.x, goal.y, grid);\n\n  return path;\n};\n","import { compact, random, sample, some, times } from \"lodash\";\nimport { dijkstra, dijkstraReverse } from \"../lib/dijkstra\";\nimport ecs, { cache, player, gameState } from \"../state/ecs\";\nimport { CLEAN, CONTACT, OBSERVE, SOIL, TAKE_DAMAGE } from \"../state/events\";\nimport { chars, colors } from \"../lib/graphics\";\nimport { grid } from \"../lib/canvas\";\nimport { toLocId, getNeighborIds } from \"../lib/grid\";\nimport { aiEntities, movableEntities, soiledEntities } from \"../queries\";\nimport { log } from \"../lib/adventure-log\";\n\nimport { aStar } from \"../lib/pathfinding\";\n\nexport const nuke = () => {\n  log({ text: `NUKE!`, fg: \"orange\" });\n  aiEntities.get().forEach((entity) => {\n    if (entity.name.nomen !== \"player\") {\n      kill(entity);\n    }\n  });\n};\n\nconst updateBloodDijkstra = () => {\n  // currently we only have blood for soilage so we can do this:\n  const bloodDijkstraMap = dijkstra(\n    [...soiledEntities.get()].map((x) => x.position)\n  );\n  cache.addObj(\"dijkstraMaps\", \"blood\", bloodDijkstraMap);\n};\n\nconst kill = (entity) => {\n  entity.add(\"IsDead\");\n  entity.remove(\"Layer400\");\n  entity.add(\"Layer300\");\n  entity.remove(\"IsBlocking\");\n  entity.remove(\"Brain\");\n  if (!entity.has(\"isBoneless\")) {\n    entity.appearance.char = chars.corpse;\n  }\n\n  if (entity.has(\"isBoneless\")) {\n    entity.appearance.background = \"transparent\";\n    entity.appearance.currentBackground = \"transparent\";\n  }\n  splatterBlood(entity, self);\n  entity.fireEvent(\"kill\");\n};\n\nconst hit = (targetEntity) => {\n  targetEntity.fireEvent(TAKE_DAMAGE, { amount: 5 });\n\n  if (targetEntity.has(\"Blood\")) {\n    splatterBlood(targetEntity);\n  }\n\n  if (!targetEntity.has(\"Animate\")) {\n    targetEntity.add(\"Animate\", {\n      animation: {\n        type: \"color\",\n        stops: [\n          colors.damage,\n          targetEntity.appearance.currentColor || targetEntity.appearance.color,\n        ],\n      },\n    });\n  }\n};\n\nexport const splatterBlood = (entity, splatterSelf = false) => {\n  if (!entity.blood) return;\n  const neighborIds = getNeighborIds(entity.position, \"ALL\");\n  const locIds = [];\n\n  if (splatterSelf) {\n    locIds.push(toLocId(entity.position));\n  }\n\n  times(random(0, 8), () => locIds.push(sample(neighborIds)));\n\n  locIds.forEach((locId) => {\n    cache.readSet(\"entitiesAtLocation\", locId).forEach((x) => {\n      const e = ecs.getEntity(x);\n\n      e.add(\"Soilage\", {\n        color: entity.blood.color,\n        name: \"blood\",\n        sourceEntityId: entity.id,\n        sourceName: entity.name.nomen,\n      });\n      e.fireEvent(SOIL, { text: `${entity.name.nomen} blood` });\n    });\n  });\n\n  updateBloodDijkstra();\n};\n\nconst bumpAttack = (targetEntity) => {\n  if (targetEntity.health) {\n    hit(targetEntity);\n\n    if (targetEntity.health.current <= 0) {\n      kill(targetEntity);\n    }\n  }\n};\n\nconst washInFountain = (targetEntity, fountain) => {\n  if (targetEntity.has(\"Soilage\")) {\n    if (fountain.has(\"Soilage\")) {\n      log(\n        {\n          text: `The fountain is filled with ${fountain.soilage[0].sourceName} ${fountain.soilage[0].name}.`,\n        },\n        targetEntity\n      );\n    } else {\n      log(\n        { text: `${targetEntity.name.nomen} bathes in the fountain.` },\n        targetEntity\n      );\n      targetEntity\n        .get(\"Soilage\")\n        .forEach((x) => fountain.add(\"Soilage\", { ...x.serialize() }));\n      targetEntity.fireEvent(CLEAN);\n    }\n  } else {\n    if (fountain.has(\"Soilage\")) {\n      log(\n        {\n          text: `The fountain is filled with ${fountain.soilage[0].sourceName} ${fountain.soilage[0].name}.`,\n        },\n        targetEntity\n      );\n    } else {\n      log({ text: `A fountain full of fresh clean water.` }, targetEntity);\n    }\n  }\n};\n\nconst absorb = (entity, position) => {\n  let entitiesAtLoc;\n  if (position) {\n    entitiesAtLoc = cache.readSet(\"entitiesAtLocation\", toLocId(position));\n  } else {\n    entitiesAtLoc = cache.readSet(\n      \"entitiesAtLocation\",\n      toLocId(entity.position)\n    );\n  }\n\n  entitiesAtLoc.forEach((eId) => {\n    if (eId !== entity.id && ecs.getEntity(eId).canBeAbsorbed) {\n      const cEntity = ecs.getEntity(eId);\n      if (cEntity.has(\"Soilage\")) {\n        // clone all soilage and add to self\n        cEntity\n          .get(\"Soilage\")\n          .forEach((x) => entity.add(\"Soilage\", { ...x.serialize() }));\n        cEntity.fireEvent(CLEAN);\n      }\n\n      // todo: should actually put the entity into it's inventory (will need to include items eventually)\n      if (cEntity.has(\"isDead\")) {\n        cache.delete(\n          \"entitiesAtLocation\",\n          toLocId(cEntity.position),\n          cEntity.id\n        );\n        cEntity.destroy();\n      }\n    }\n  });\n  updateBloodDijkstra();\n};\n\nexport const movement = () => {\n  movableEntities.get().forEach((entity) => {\n    aStar(entity.position, player.position);\n\n    let mPos = { x: entity.moveTo.x, y: entity.moveTo.y };\n    if (entity.moveTo.relative) {\n      mPos = {\n        x: entity.position.x + entity.moveTo.x,\n        y: entity.position.y + entity.moveTo.y,\n      };\n    }\n\n    const { width, height, x, y } = grid.map;\n\n    // observe map boundaries\n    const mx = Math.min(width + x - 1, Math.max(x, mPos.x));\n    const my = Math.min(height + y - 1, Math.max(y, mPos.y));\n\n    let blockers = [];\n\n    const locId = toLocId({ x: mx, y: my });\n    const entitiesAtLoc = cache.readSet(\"entitiesAtLocation\", locId);\n\n    if (entitiesAtLoc) {\n      entitiesAtLoc.forEach((eid) => {\n        const potentialBlocker = ecs.getEntity(eid);\n\n        potentialBlocker.fireEvent(CONTACT);\n\n        if (entity.name.nomen === \"player\") {\n          potentialBlocker.fireEvent(OBSERVE);\n        }\n\n        if (potentialBlocker.isBlocking) {\n          blockers.push(potentialBlocker);\n        }\n      });\n    }\n\n    if (blockers.length) {\n      blockers.forEach((blocker) => {\n        // if has brain and not the same species - bump attack\n        if (\n          (blocker.brain || blocker.name.nomen === \"player\") &&\n          entity.name.nomen !== blocker.name.nomen\n        ) {\n          const playerEntity = [entity, blocker].filter(\n            (e) => e.name.nomen === \"player\"\n          );\n          log(\n            { text: `${entity.name.nomen} hits ${blocker.name.nomen}` },\n            playerEntity\n          );\n          bumpAttack(blocker);\n        }\n\n        if (blocker.name.nomen === \"fountain\") {\n          washInFountain(entity, blocker);\n        }\n\n        if (entity.has(\"canAbsorb\")) {\n          absorb(entity, blocker.position);\n        }\n      });\n      return entity.remove(\"MoveTo\");\n    }\n\n    if (entity.has(\"canAbsorb\")) {\n      absorb(entity);\n    }\n\n    // update cache\n    cache.delete(\"entitiesAtLocation\", toLocId(entity.position), entity.id);\n    cache.addSet(\"entitiesAtLocation\", toLocId({ x: mx, y: my }), entity.id);\n\n    if (entity.id === player.id && gameState.playerTurn) {\n      const playerDijkstraMap = dijkstra([{ x: mx, y: my }]);\n      const playerReverse = dijkstraReverse(playerDijkstraMap);\n\n      cache.addObj(\"dijkstraMaps\", \"player\", playerDijkstraMap);\n      cache.addObj(\"dijkstraMaps\", \"playerReverse\", playerReverse);\n    }\n\n    entity.position.px = entity.position.x;\n    entity.position.py = entity.position.y;\n    entity.position.x = mx;\n    entity.position.y = my;\n\n    entity.remove(\"MoveTo\");\n  });\n};\n","import MoveTo from \"../components/MoveTo\";\nimport { nuke, splatterBlood } from \"../systems/movement\";\nimport { gameState, player, loadGame, saveGame } from \"../state/ecs\";\n\nexport const input = (key) => {\n    switch (key) {\n        case \"L\":\n            gameState.userInput = { key, type: \"LOAD\", payload: {} };\n            break;\n        case \"S\":\n            gameState.userInput = { key, type: \"SAVE\", payload: {} };\n            break;\n        case \"z\":\n            gameState.userInput = { key, type: \"REST\", payload: {} };\n            break;\n\n        // debug codes:\n        case \"N\":\n            gameState.userInput = { key, type: \"NUKE\", payload: {} };\n            break;\n        case \"B\":\n            gameState.userInput = { key, type: \"BLOOD\", payload: {} };\n            break;\n        case \"O\":\n            gameState.userInput = { key, type: \"OMNISCIENT\", payload: {} };\n            break;\n\n        // Movement\n        case \"ArrowUp\":\n            gameState.userInput = {\n                key,\n                type: \"MOVE\",\n                payload: { x: 0, y: -1 },\n            };\n            break;\n        case \"ArrowDown\":\n            gameState.userInput = {\n                key,\n                type: \"MOVE\",\n                payload: { x: 0, y: 1 },\n            };\n            break;\n        case \"ArrowLeft\":\n            gameState.userInput = {\n                key,\n                type: \"MOVE\",\n                payload: { x: -1, y: 0 },\n            };\n            break;\n        case \"ArrowRight\":\n            gameState.userInput = {\n                key,\n                type: \"MOVE\",\n                payload: { x: 1, y: 0 },\n            };\n            break;\n        case \"1\": // SW\n            gameState.userInput = {\n                key,\n                type: \"MOVE\",\n                payload: { x: -1, y: 1 },\n            };\n            break;\n        case \"2\": // SOUTH\n            gameState.userInput = {\n                key,\n                type: \"MOVE\",\n                payload: { x: 0, y: 1 },\n            };\n            break;\n        case \"3\": // SE\n            gameState.userInput = {\n                key,\n                type: \"MOVE\",\n                payload: { x: 1, y: 1 },\n            };\n            break;\n        case \"4\": // WEST\n            gameState.userInput = {\n                key,\n                type: \"MOVE\",\n                payload: { x: -1, y: 0 },\n            };\n            break;\n        case \"6\": // EAST\n            gameState.userInput = {\n                key,\n                type: \"MOVE\",\n                payload: { x: 1, y: 0 },\n            };\n            break;\n        case \"7\": // NW\n            gameState.userInput = {\n                key,\n                type: \"MOVE\",\n                payload: { x: -1, y: -1 },\n            };\n            break;\n        case \"8\": // NORTH\n            gameState.userInput = {\n                key,\n                type: \"MOVE\",\n                payload: { x: 0, y: -1 },\n            };\n            break;\n        case \"9\": // NE\n            gameState.userInput = {\n                key,\n                type: \"MOVE\",\n                payload: { x: 1, y: -1 },\n            };\n            break;\n    }\n};\n\nexport const processUserInput = () => {\n    if (!gameState.userInput) {\n        return;\n    }\n\n    const { key, type, payload } = gameState.userInput;\n\n    if (type === \"BLOOD\") {\n        splatterBlood(player);\n    }\n\n    if (type === \"NUKE\") {\n        nuke();\n    }\n\n    if (type === \"OMNISCIENT\") {\n        gameState.omniscient = !gameState.omniscient;\n    }\n\n    if (type === \"MOVE\") {\n        player.add(MoveTo, payload);\n    }\n\n    if (type === \"SAVE\") {\n        saveGame();\n    }\n\n    if (type === \"LOAD\") {\n        loadGame();\n    }\n};\n","import { compact, random } from \"lodash\";\nimport { rectangle, rectsIntersect, isOnMapEdge, randomNeighbor } from \"./grid\";\n\nfunction digHorizontalPassage(tiles, x1, x2, y) {\n  const start = Math.min(x1, x2);\n  const end = Math.max(x1, x2) + 1;\n  let x = start;\n\n  while (x < end) {\n    tiles[`${x},${y}`] = { x, y, sprite: \"FLOOR\" };\n    x++;\n  }\n}\n\nfunction digVerticalPassage(tiles, y1, y2, x) {\n  const start = Math.min(y1, y2);\n  const end = Math.max(y1, y2) + 1;\n  let y = start;\n\n  while (y < end) {\n    tiles[`${x},${y}`] = { x, y, sprite: \"FLOOR\" };\n    y++;\n  }\n}\n\nconst digDrunkenWalk = (x, y, tiles) => {\n  let loc = randomNeighbor(x, y);\n  // if new loc is a tile and not on the map edge\n  if (tiles[`${[loc.x]},${[loc.y]}`] && !isOnMapEdge(loc.x, loc.y)) {\n    tiles[`${loc.x},${loc.y}`] = {\n      x: loc.x,\n      y: loc.y,\n      sprite: \"CAVERN_FLOOR\",\n    };\n    return { x: loc.x, y: loc.y };\n  } else {\n    return { x, y };\n  }\n};\n\nexport const generateDungeon = ({\n  x,\n  y,\n  width,\n  height,\n  maxRoomCount,\n  minRoomSize,\n  maxRoomSize,\n}) => {\n  // fill the entire space with walls so we can dig it out later\n  const { tiles } = rectangle(\n    { x, y, width, height },\n    { sprite: \"WALL\", blocking: true, opaque: true }\n  );\n\n  const rooms = [];\n  let roomTiles = {};\n\n  for (let r of Array(maxRoomCount).keys()) {\n    let rw = random(minRoomSize, maxRoomSize);\n    let rh = random(minRoomSize, maxRoomSize);\n    let rx = random(x, width + x - rw - 1);\n    let ry = random(y, height + y - rh - 1);\n\n    // create a candidate room\n    // todo: perf - don't bother filling this in here - wait till it's accepted\n    const candidate = rectangle(\n      { x: rx, y: ry, width: rw, height: rh, hasWalls: true },\n      { sprite: \"FLOOR\", blocking: false, opaque: false }\n    );\n\n    if (!rooms.some((room) => rectsIntersect(room, candidate))) {\n      rooms[r] = candidate;\n      roomTiles = { ...roomTiles, ...candidate.tiles };\n    }\n  }\n\n  let prevRoom = null;\n\n  for (let room of compact(rooms)) {\n    if (prevRoom) {\n      const prev = prevRoom.center;\n      const curr = room.center;\n\n      if (random(0, 1)) {\n        digHorizontalPassage(tiles, prev.x, curr.x, curr.y);\n        digVerticalPassage(tiles, prev.y, curr.y, prev.x);\n      } else {\n        digVerticalPassage(tiles, prev.y, curr.y, prev.x);\n        digHorizontalPassage(tiles, prev.x, curr.x, curr.y);\n      }\n    }\n\n    prevRoom = room;\n  }\n\n  const processedTiles = { ...tiles, ...roomTiles };\n  let digLoc = { x: x + Math.floor(width / 2), y: Math.floor(y + height / 2) };\n\n  for (let i = 0; i < 1000; i++) {\n    digLoc = digDrunkenWalk(digLoc.x, digLoc.y, processedTiles);\n  }\n\n  const openTileIds = Object.keys(processedTiles).filter(\n    (tileId) => !processedTiles[tileId].blocking\n  );\n\n  return { tiles: processedTiles, start: rooms[0].center, openTileIds, rooms };\n};\n","import { get, random, sample, some, times } from \"lodash\";\nimport ecs, { cache } from \"../state/ecs\";\nimport { colors } from \"../lib/graphics\";\nimport { generateDungeon } from \"../lib/dungeon\";\nimport { grid } from \"../lib/canvas\";\nimport { cellToId, toCell, getNeighborIds } from \"../lib/grid\";\nimport CanDijkstra from \"../components/CanDijkstra\";\n\nconst initDungeonLevel = () => {\n  // create dungeon level\n  const dungeon = generateDungeon({\n    x: grid.map.x,\n    y: grid.map.y,\n    width: grid.map.width,\n    height: grid.map.height,\n    maxRoomCount: 30,\n    minRoomSize: 6,\n    maxRoomSize: 12,\n  });\n\n  Object.keys(dungeon.tiles).forEach((tileId) => {\n    const currTile = dungeon.tiles[tileId];\n\n    // Only make entities for tiles can be seen\n    if (\n      some(getNeighborIds(currTile, \"ALL\"), (locId) => {\n        return get(dungeon, `tiles.${locId}.sprite`, \"WALL\") !== \"WALL\";\n      })\n    ) {\n      let entity;\n\n      if (currTile.sprite === \"WALL\") {\n        entity = ecs.createPrefab(\"WallPrefab\", {\n          position: { x: currTile.x, y: currTile.y },\n        });\n        entity.appearance.color = sample(colors.wall);\n      }\n\n      if (currTile.sprite === \"FLOOR\") {\n        entity = ecs.createPrefab(\"FloorPrefab\", {\n          position: { x: currTile.x, y: currTile.y },\n        });\n        entity.appearance.color = sample(colors.floor);\n        entity.add(CanDijkstra);\n      }\n\n      if (currTile.sprite === \"CAVERN_FLOOR\") {\n        entity = ecs.createPrefab(\"FloorPrefab\", {\n          position: { x: currTile.x, y: currTile.y },\n        });\n        entity.appearance.color = sample(colors.cavernFloor);\n        entity.add(CanDijkstra);\n      }\n\n      const locId = cellToId(currTile);\n      cache.addSet(\"entitiesAtLocation\", locId, entity.id);\n    }\n  });\n\n  // add bonfires\n  dungeon.rooms.forEach((room, index) => {\n    if (index !== 0 && random(1, 3) === 1) {\n      const locId = cellToId(room.center);\n      // make sure the location is empty (only floor tiles should exist here...)\n      if (cache.readSet(\"entitiesAtLocation\", locId).size === 1) {\n        const entity = ecs.createPrefab(\"FountainPrefab\", {\n          position: room.center,\n        });\n\n        cache.addSet(\"entitiesAtLocation\", locId, entity.id);\n      }\n    }\n  });\n\n  // add traps\n  times(random(1, 5), () => {\n    const locId = sample(dungeon.openTileIds);\n    if (cache.readSet(\"entitiesAtLocation\", locId).size === 1) {\n      const entity = ecs.createPrefab(\"TrapPrefab\", {\n        position: toCell(locId),\n      });\n\n      cache.addSet(\"entitiesAtLocation\", locId, entity.id);\n    }\n  });\n\n  // spawn monsters!\n  times(random(5, 10), () => {\n    const locId = sample(dungeon.openTileIds);\n    if (cache.readSet(\"entitiesAtLocation\", locId).size === 1) {\n      const entity = ecs.createPrefab(\"GoblinPrefab\", {\n        position: toCell(locId),\n      });\n\n      cache.addSet(\"entitiesAtLocation\", locId, entity.id);\n    }\n  });\n\n  times(random(5, 10), () => {\n    const locId = sample(dungeon.openTileIds);\n    if (cache.readSet(\"entitiesAtLocation\", locId).size === 1) {\n      const entity = ecs.createPrefab(\"SkeletonPrefab\", {\n        position: toCell(locId),\n      });\n\n      cache.addSet(\"entitiesAtLocation\", locId, entity.id);\n    }\n  });\n\n  times(random(1, 1), () => {\n    const locId = sample(dungeon.openTileIds);\n    if (cache.readSet(\"entitiesAtLocation\", locId).size === 1) {\n      const entity = ecs.createPrefab(\"GelatinousCubePrefab\", {\n        position: toCell(locId),\n      });\n\n      cache.addSet(\"entitiesAtLocation\", locId, entity.id);\n    }\n  });\n\n  return dungeon;\n};\n\nexport default initDungeonLevel;\n","import { random } from \"lodash\";\nimport { cache, player } from \"../state/ecs\";\nimport { aiEntities, aiEntitiesInFov, soiledEntities } from \"../queries\";\nimport { aStar, drunkenWalk, walkDijkstra } from \"../lib/pathfinding\";\nimport { toLocId } from \"../lib/grid\";\n\nconst moveToPlayer = (entity) => {\n  if (random(0, 20) > 1) {\n    const path = aStar(entity.position, player.position);\n    if (path.length) {\n      const newLoc = path[1];\n      if (entity.has(\"IsInFov\")) {\n        entity.add(\"MoveTo\", { x: newLoc[0], y: newLoc[1], relative: false });\n      }\n    }\n  }\n};\n\n// should try and have a safe haven for them to congregrate to and\n// astar there after a quick freak out run about\nconst moveAwayFromPlayer = (entity) => {\n  const newLoc = walkDijkstra(entity, \"playerReverse\");\n  if (Object.keys(newLoc).length) {\n    if (entity.has(\"IsInFov\")) {\n      entity.add(\"MoveTo\", { ...newLoc, relative: false });\n    }\n  }\n};\n\nconst moveToBlood = (entity) => {\n  const newLoc = walkDijkstra(entity, \"blood\");\n  if (Object.keys(newLoc).length) {\n    entity.add(\"MoveTo\", { ...newLoc, relative: false });\n  }\n};\n\nconst meander = (entity, frequency = 1, stickiness = 4) => {\n  if (random(1, frequency) === 1) {\n    let m = drunkenWalk();\n\n    // do we have a previous location?\n    if (entity.position.px && entity.position.py) {\n      // are we stuck in the same direction?\n      if (random(1, stickiness) < stickiness) {\n        // yes - keep going in the same direction\n        m = {\n          x: entity.position.x - entity.position.px,\n          y: entity.position.y - entity.position.py,\n        };\n      }\n    }\n\n    const newLoc = m;\n    entity.add(\"MoveTo\", { ...newLoc, relative: true });\n  }\n};\n\nexport const ai = () => {\n  aiEntities.get().forEach((entity) => {\n    if (entity.brain.ai === \"goblin\") {\n      // if player is covered in blood - run away!\n      if (player.has(\"Soilage\")) {\n        moveAwayFromPlayer(entity);\n      } else {\n        const distance = cache.readObj(\"dijkstraMaps\", \"player\")[\n          toLocId(entity.position)\n        ];\n\n        // should add a component of some sort that will track if an enemy has spotted the player.\n        // being in FOV is a cheap shortcut that only works so-so\n        // todo: have the stay out of FOV and only enter when there are enough of them!\n        //  but only do that when hunting...\n        if (\n          distance > 4 ||\n          [...aiEntitiesInFov.get()].filter((x) => x.name.nomen === \"goblin\")\n            .length > 1\n        ) {\n          moveToPlayer(entity);\n        } else {\n          moveAwayFromPlayer(entity);\n        }\n      }\n    }\n\n    if (entity.brain.ai === \"skeleton\") {\n      if (player.has(\"Soilage\")) {\n        moveToPlayer(entity);\n      } else {\n        meander(entity, 5);\n      }\n    }\n\n    if (entity.brain.ai === \"gelatinousCube\") {\n      if (soiledEntities.get().size) {\n        moveToBlood(entity);\n      } else {\n        meander(entity);\n      }\n    }\n  });\n};\n","import ecs, { cache } from \"../state/ecs\";\nimport { SOIL, TAKE_DAMAGE } from \"../state/events\";\nimport { random, sample, times } from \"lodash\";\nimport { aoeEntities, soiledEntities } from \"../queries\";\nimport { circle } from \"../lib/grid\";\nimport { dijkstra } from \"../lib/dijkstra\";\n\nconst popRandom = (array) => {\n  let i = (Math.random() * array.length) | 0;\n  return array.splice(i, 1)[0];\n};\n\nexport const aoe = () => {\n  aoeEntities.get().forEach((entity) => {\n    const aoe = entity.areaOfEffect;\n\n    const locIdsInRange = circle(entity.position, aoe.range);\n\n    times(locIdsInRange.length, () => {\n      if (random(1, 100) > aoe.affectRate) {\n        popRandom(locIdsInRange);\n      }\n    });\n\n    // AOE TYPES:\n    // SOILAGE\n    if ((aoe.aoeType = \"SOILAGE\")) {\n      locIdsInRange.forEach((locId) => {\n        const esAtLoc = cache.readObj(\"entitiesAtLocation\", locId);\n        if (esAtLoc) {\n          esAtLoc.forEach((eId) => {\n            const e = ecs.getEntity(eId);\n            e.add(\"Soilage\", {\n              color: aoe.aoeData.color,\n              name: aoe.aoeData.name,\n              sourceEntityId: entity.id,\n              sourceName: entity.name.nomen,\n            });\n            e.fireEvent(SOIL, { text: `${entity.name.nomen} blood` });\n\n            // apply damage of type to all effect entities\n            e.fireEvent(TAKE_DAMAGE, { amount: aoe.damageAmount });\n          });\n        }\n      });\n\n      // currently we only have blood for soilage so we can do this:\n      const bloodDijkstraMap = dijkstra(\n        [...soiledEntities.get()].map((x) => x.position)\n      );\n      cache.addObj(\"dijkstraMaps\", \"blood\", bloodDijkstraMap);\n    }\n\n    // decrement duration\n    aoe.duration--;\n\n    // if duration === 0 remove this component\n    if (aoe.duration < 1) {\n      aoe.remove(false); // don't destroy just remove\n    }\n  });\n};\n","import { distance, idToCell } from \"./grid\";\n\nconst octantTransforms = [\n  { xx: 1, xy: 0, yx: 0, yy: 1 },\n  { xx: 1, xy: 0, yx: 0, yy: -1 },\n  { xx: -1, xy: 0, yx: 0, yy: 1 },\n  { xx: -1, xy: 0, yx: 0, yy: -1 },\n  { xx: 0, xy: 1, yx: 1, yy: 0 },\n  { xx: 0, xy: 1, yx: -1, yy: 0 },\n  { xx: 0, xy: -1, yx: 1, yy: 0 },\n  { xx: 0, xy: -1, yx: -1, yy: 0 },\n];\n\n// width: width of map (or visible map?)\n// height: height of map (or visible map?)\nexport default function createFOV(\n  opaqueEntities,\n  width,\n  height,\n  originX,\n  originY,\n  radius\n) {\n  const visible = new Set();\n\n  const blockingLocations = new Set();\n  opaqueEntities\n    .get()\n    .forEach((x) => blockingLocations.add(`${x.position.x},${x.position.y}`));\n\n  const isOpaque = (x, y) => {\n    const locId = `${x},${y}`;\n    return !!blockingLocations.has(locId);\n  };\n  const reveal = (x, y) => {\n    return visible.add(`${x},${y}`);\n  };\n\n  function castShadows(originX, originY, row, start, end, transform, radius) {\n    let newStart = 0;\n    if (start < end) return;\n\n    let blocked = false;\n\n    for (let distance = row; distance < radius && !blocked; distance++) {\n      let deltaY = -distance;\n      for (let deltaX = -distance; deltaX <= 0; deltaX++) {\n        let currentX = originX + deltaX * transform.xx + deltaY * transform.xy;\n        let currentY = originY + deltaX * transform.yx + deltaY * transform.yy;\n\n        let leftSlope = (deltaX - 0.5) / (deltaY + 0.5);\n        let rightSlope = (deltaX + 0.5) / (deltaY - 0.5);\n\n        if (\n          !(\n            currentX >= 0 &&\n            currentY >= 0 &&\n            currentX < width &&\n            currentY < height\n          ) ||\n          start < rightSlope\n        ) {\n          continue;\n        } else if (end > leftSlope) {\n          break;\n        }\n\n        if (Math.sqrt(deltaX * deltaX + deltaY * deltaY) <= radius) {\n          reveal(currentX, currentY);\n        }\n\n        if (blocked) {\n          if (isOpaque(currentX, currentY)) {\n            newStart = rightSlope;\n            continue;\n          } else {\n            blocked = false;\n            start = newStart;\n          }\n        } else {\n          if (isOpaque(currentX, currentY) && distance < radius) {\n            blocked = true;\n            castShadows(\n              originX,\n              originY,\n              distance + 1,\n              start,\n              leftSlope,\n              transform,\n              radius\n            );\n            newStart = rightSlope;\n          }\n        }\n      }\n    }\n  }\n\n  reveal(originX, originY);\n  for (let octant of octantTransforms) {\n    castShadows(originX, originY, 1, 1, 0, octant, radius);\n  }\n\n  return {\n    fov: visible,\n    distance: [...visible].reduce((acc, val) => {\n      const cell = idToCell(val);\n      acc[val] = distance({ x: originX, y: originY }, { x: cell.x, y: cell.y });\n      return acc;\n    }, {}),\n  };\n}\n","import { times } from \"lodash\";\nimport { drawCell } from \"../lib/canvas\";\nimport { colors } from \"../lib/graphics\";\n\nexport default class Terminal {\n  constructor(options = {}) {\n    this.height = options.height;\n    this.width = options.width;\n    this.x = options.x;\n    this.y = options.y;\n    this.templates = options.templates || []; // array of template objects\n    this.options = {};\n\n    this.options.fg = options.fg || colors.hudText;\n    this.options.bg = options.bg || colors.defaultBGColor;\n    this.options.x = options.x || this.x;\n    this.options.y = options.y || this.y;\n    this.options.fgA = options.fgA || 1;\n    this.options.bgA = options.bgA || 1;\n\n    this.options.fadeY = options.fadeY;\n  }\n\n  #drawText(template) {\n    const textToRender = template.text;\n\n    textToRender.split(\"\").forEach((char, index) => {\n      // we shouldn't have to do this for each char -\n      // but gotta refactor drawCell to solve this one...\n      const options = { ...this.options, ...template };\n      const character = {\n        appearance: {\n          char,\n          background: options.bg,\n          color: options.fg,\n        },\n        position: {\n          x: index + options.x,\n          y: options.y,\n        },\n      };\n\n      if (template.fadeX) {\n        options.fgA = (textToRender.length - index) / 100;\n      }\n\n      delete options.x;\n      delete options.y;\n\n      drawCell(character, options);\n    });\n  }\n\n  #drawInline(templates) {\n    let cursor = this.x;\n    templates.forEach((tempt) => {\n      const tp = {\n        ...tempt,\n        x: cursor,\n        y: tempt.y || this.y,\n      };\n\n      this.#drawText(tp);\n      cursor += tempt.text.length;\n    });\n  }\n\n  #drawTemplates() {\n    const templates = this.templates.slice(this.templates.length - this.height);\n    templates.forEach((template, index) => {\n      if (index > this.height) {\n        return;\n      }\n      if (Array.isArray(template)) {\n        const fgA = this.options.fadeY ? index * 0.75 || 0.5 : 1;\n        this.#drawInline(\n          template.map((x) => ({ ...x, y: x.y || index + this.y, fgA }))\n        );\n      } else {\n        const tempt = {\n          ...template,\n          x: template.x || this.x,\n          y: template.y || index + this.y,\n        };\n\n        if (this.options.fadeY) {\n          tempt.fgA = index * 0.75 || 0.5;\n        }\n\n        this.#drawText(tempt);\n      }\n    });\n  }\n\n  drawNamePlates(entities) {\n    const templates = [];\n    let y = this.y;\n\n    entities.forEach((entity, index) => {\n      templates.push([\n        {\n          text: `${entity.appearance.char}` || \" \",\n          bg: entity.appearance.background,\n          fg: entity.appearance.currentColor || entity.appearance.color,\n          y,\n        },\n\n        {\n          text: `: ${entity.name.nomen}`,\n          y,\n        },\n      ]);\n      y++;\n\n      if (!entity.isDead && entity.health && entity.health.current > 0) {\n        const percent = (entity.health.current / entity.health.max) * 17; // width of nameplates (hud) minus 3\n        const bars = Math.ceil(percent);\n        if (!bars) return;\n\n        const tempt = [];\n        times(bars + 3, (index) => {\n          if (index < 3) {\n            tempt.push({\n              text: \" \",\n              y,\n            });\n          } else {\n            tempt.push({\n              text: \"⁗\",\n              fg:\n                (entity.blood && entity.blood.color) ||\n                entity.appearance.color ||\n                \"red\",\n              y,\n            });\n          }\n        });\n\n        templates.push(tempt);\n        y++;\n      } else {\n        y++;\n      }\n    });\n\n    this.templates = templates;\n\n    this.draw();\n  }\n\n  draw() {\n    return this.#drawTemplates();\n  }\n\n  update(templates) {\n    this.templates = templates;\n  }\n}\n\n// ONLY SUPPORT TEMPLATES:\n// templates: [{ text: '', ...options }, { text: '', ...options }] // one or many lines\n// templates: [[{ text: '', ...options }, { text: '', ...options }]] // inline (for multi color things)\n","import { random, sortBy, times, zip } from \"lodash\";\nimport { cache, gameState, player } from \"../state/ecs\";\nimport Terminal from \"../gui/Terminal\";\nimport { colors } from \"../lib/graphics\";\nimport { clearCanvas, drawCell } from \"../lib/canvas\";\nimport { toLocId } from \"../lib/grid\";\nimport {\n    layer100Entities,\n    layer300Entities,\n    layer400Entities,\n    legendEntities,\n} from \"../queries\";\n\nimport { renderOmniscience, renderAllChars } from \"../lib/debug\";\n\nconst drawCellIfAble = (entity, options) => {\n    const { appearance, isInFov, isRevealed } = entity;\n\n    if (isInFov) {\n        drawCell(entity, {\n            fg: appearance.currentColor || appearance.color,\n            ...options,\n        });\n    }\n\n    if (isRevealed && !isInFov) {\n        drawCell(entity, {\n            fg: colors.revealedColor,\n            ...options,\n        });\n    }\n};\n\nconst AdventureLog = new Terminal({\n    width: 75,\n    height: 3,\n    x: 21,\n    y: 0,\n    templates: gameState.adventureLog,\n    fadeY: true,\n});\n\nconst InnerMonologue = new Terminal({\n    width: 75,\n    height: 1,\n    x: 21,\n    y: 33,\n    templates: gameState.innerMonologue,\n});\n\nconst Legend = new Terminal({\n    width: 20,\n    height: 30,\n    x: 0,\n    y: 0,\n});\n\nconst bloodTemplates = () => {\n    const bloodLines = [];\n    times(79, () => {\n        const line = [];\n        times(random(0, 34), () => {\n            line.push(\"•\");\n        });\n        bloodLines.push(line);\n    });\n\n    return zip(...bloodLines)\n        .map((line) => line.map((x) => x || \" \"))\n        .map((x) => ({\n            text: x.join(\"\"),\n            fg: colors.blood,\n        }));\n};\n\nconst MorgueBlood = new Terminal({\n    width: 79,\n    height: 30,\n    x: 21,\n    y: 3,\n    templates: bloodTemplates(),\n});\n\nconst Morgue = new Terminal({\n    width: 35,\n    height: 8,\n    x: 35,\n    y: 10,\n    templates: [\n        {\n            text: \"You Have Died\",\n            fg: colors.blood,\n            x: 53,\n        },\n        { text: \"Refresh the browser\", x: 50 },\n        { text: \"to play again\", x: 53 },\n    ],\n});\n\nconst sortLegend = () => {\n    const playerDijkstra = cache.readObj(\"dijkstraMaps\", \"player\");\n\n    return sortBy([...legendEntities.get()], (entity) => {\n        const dScore = playerDijkstra[toLocId(entity.position)];\n        return dScore;\n    });\n};\n\nexport const render = () => {\n    clearCanvas();\n\n    const options = {};\n    if (player.isDead) {\n        options.fgA = 0;\n    }\n\n    layer100Entities.get().forEach((entity) => drawCellIfAble(entity, options));\n\n    if (gameState.omniscient) {\n        renderOmniscience();\n    }\n\n    layer300Entities.get().forEach((entity) => drawCellIfAble(entity, options));\n    layer400Entities.get().forEach((entity) => drawCellIfAble(entity, options));\n\n    AdventureLog.draw();\n    InnerMonologue.draw();\n    Legend.drawNamePlates(sortLegend());\n\n    if (player.isDead) {\n        MorgueBlood.draw();\n        Morgue.draw();\n    }\n\n    // to view all possible characters\n    // clearCanvas();\n    // renderAllChars();\n};\n","import { sample } from \"lodash\";\nimport ecs, { cache } from \"../state/ecs\";\nimport { drawCell } from \"../lib/canvas\";\nimport { colors } from \"../lib/graphics\";\nimport { rectangle, toCell } from \"../lib/grid\";\nimport allChars from \"./all-chars\";\n\nconst colorNames = [\n    \"CRIMSON\",\n    \"PALEVIOLETRED\",\n    \"TOMATO\",\n    \"ORANGERED\",\n    \"DARKORANGE\",\n    \"KHAKI\",\n    \"DARKSLATEBLUE\",\n    \"VIOLET\",\n    \"DARKCYAN\",\n    \"SEAGREEN\",\n    \"STEELBLUE\",\n    \"MEDIUMSLATEBLUE\",\n];\n\n// render dijkstra\nexport const renderDijkstra = (dMapName) => {\n    Object.keys(cache.dijkstraMaps[dMapName]).forEach((locId) => {\n        drawCell(\n            {\n                appearance: {\n                    char: cache.dijkstraMaps.player[locId],\n                    background: \"transparent\",\n                },\n                position: toCell(locId),\n            },\n            { fgA: 0.5, size: 16 }\n        );\n    });\n};\n\nexport const renderOmniscience = () => {\n    [...ecs.entities.all].forEach((entity) => {\n        const {\n            isInFov,\n            isRevealed,\n            appearance,\n            layer100,\n            layer200,\n            layer300,\n            layer400,\n        } = entity;\n        // if it has been revealed draw normally.\n        if (isInFov) {\n            drawCell(entity, {\n                fg: appearance.currentColor || appearance.color,\n            });\n        }\n\n        if (isRevealed && !isInFov) {\n            drawCell(entity, {\n                fg: colors.revealedColor,\n            });\n        }\n\n        // if no alpha, draw each layer with a different color\n        if (!isRevealed) {\n            if (layer100) {\n                drawCell(entity, { fg: \"#101250\", fgA: 1 });\n            }\n            if (layer200) {\n                drawCell(entity, { fg: \"#102250\", fgA: 1 });\n            }\n            if (layer300) {\n                drawCell(entity, { fg: \"#103250\", fgA: 1 });\n            }\n            if (layer400) {\n                drawCell(entity, { fg: \"#104250\", fgA: 1 });\n            }\n        }\n    });\n};\n\nexport const renderAllChars = (rotate) => {\n    const charEntities = [];\n\n    if (!cache.allChars.length) {\n        const cells = rectangle({ x: 0, y: 0, width: 100, height: 30 });\n        Object.keys(cells.tiles).forEach((tileId, index) => {\n            if (allChars[index]) {\n                const currTile = cells.tiles[tileId];\n                const entity = ecs.createPrefab(\"CharPrefab\", {\n                    position: { x: currTile.x, y: currTile.y },\n                    appearance: {\n                        char: allChars[index],\n                        // color: index % 2 ? \"red\" : \"yellow\",\n                        color: sample(colorNames),\n                    },\n                });\n                charEntities.push(entity);\n                cache.addSet(\"entitiesAtLocation\", tileId, entity.id);\n            }\n        });\n\n        cache.allChars = charEntities;\n    }\n\n    cache.allChars.forEach((entity) => {\n        drawCell(entity, { rotate });\n    });\n};\n","import copyToClipboard from \"copy-to-clipboard\";\n\nimport \"./lib/canvas.js\";\nimport { pxToCell } from \"./lib/canvas\";\nimport { colors } from \"./lib/graphics\";\nimport ecs, { cache, player, gameState } from \"./state/ecs\";\nimport { input, processUserInput } from \"./lib/process-user-input\";\nimport { cellToId } from \"./lib/grid\";\nimport { log, innerLog } from \"./lib/adventure-log\";\nimport { dijkstra } from \"./lib/dijkstra\";\n\nimport initDungeonLevel from \"./initializers/dungeon-level.init\";\n\nimport { ai } from \"./systems/ai\";\nimport { animation } from \"./systems/animation\";\nimport { aoe } from \"./systems/aoe\";\nimport { fov } from \"./systems/fov\";\nimport { movement } from \"./systems/movement\";\nimport { render } from \"./systems/render\";\n\nimport { animatingEntities } from \"./queries\";\n\ndocument.addEventListener(\"keydown\", (ev) => input(ev.key));\ndocument.querySelector(\"#loading\").classList.add(\"hide\");\n\nfunction initGame() {\n  const dungeon = initDungeonLevel();\n  player.position.x = dungeon.start.x;\n  player.position.y = dungeon.start.y;\n\n  cache.addSet(\"entitiesAtLocation\", cellToId(dungeon.start), player.id);\n\n  const playerDijkstraMap = dijkstra([\n    { x: player.position.x, y: player.position.y },\n  ]);\n  cache.addObj(\"dijkstraMaps\", \"player\", playerDijkstraMap);\n\n  log({ text: \"Welcome to COVERED IN BLOOD!\" });\n  log([\n    { text: \"A game where you get \" },\n    { text: \"COVERED IN BLOOD!\", fg: \"red\" },\n  ]);\n  log([\n    { text: \"Watch out for mobs of \" },\n    { text: \"goblins\", fg: colors.goblin },\n    { text: \"!\" },\n  ]);\n}\n\ninitGame();\n\nfunction gameTick() {\n  if (!gameState.playerTurn) {\n    ai();\n  }\n\n  movement();\n  aoe();\n\n  if (gameState.playerTurn) {\n    fov();\n  }\n\n  render();\n}\n\ngameTick();\n\nfunction update() {\n  if (player.isDead) {\n    if (!gameState.gameOver) {\n      innerLog({\n        text: \"Your vision goes dark as you feel your life slip away...\",\n        fadeX: true,\n      });\n\n      render();\n    }\n\n    gameState.gameOver = true;\n  }\n\n  if (gameState.userInput && gameState.playerTurn && !player.isDead) {\n    processUserInput();\n    gameTick();\n    gameState.userInput = null;\n    gameState.turn = gameState.turn += 1;\n    gameState.playerTurn = false;\n  }\n\n  if (!gameState.playerTurn) {\n    gameTick();\n    gameState.playerTurn = true;\n  }\n}\n\nfunction gameLoop() {\n  update();\n  requestAnimationFrame(gameLoop);\n}\n\nrequestAnimationFrame(gameLoop);\n\n// it's a PITA to mock canvas in jest so we just hack it's running\nif (process.env.NODE_ENV !== \"test\") {\n  const canvas = document.querySelector(\"#canvas\");\n\n  canvas.onclick = (e) => {\n    const [x, y] = pxToCell(e);\n    const locId = cellToId({ x, y });\n\n    let chars = \"\";\n    cache.readSet(\"entitiesAtLocation\", locId).forEach((eId) => {\n      const entity = ecs.getEntity(eId);\n      console.log(entity.serialize());\n      chars += entity.appearance.char;\n    });\n\n    copyToClipboard(chars);\n  };\n}\n","import ecs, { cache, player } from \"../state/ecs\";\nimport { grid } from \"../lib/canvas\";\nimport createFOV from \"../lib/fov\";\n\nimport IsInFov from \"../components/IsInFov\";\nimport IsRevealed from \"../components/IsRevealed\";\n\nimport { inFovEntities, opaqueEntities } from \"../queries\";\n\nexport const fov = () => {\n  const { width, height } = grid;\n\n  const originX = player.position.x;\n  const originY = player.position.y;\n\n  const FOV = createFOV(opaqueEntities, width, height, originX, originY, 10);\n\n  // clear out stale fov\n  inFovEntities.get().forEach((x) => x.remove(IsInFov));\n\n  FOV.fov.forEach((locId) => {\n    const entitiesAtLoc = cache.readSet(\"entitiesAtLocation\", locId);\n\n    if (entitiesAtLoc) {\n      entitiesAtLoc.forEach((eId) => {\n        const entity = ecs.getEntity(eId);\n        entity.add(IsInFov);\n\n        if (!entity.has(\"IsRevealed\")) {\n          entity.add(IsRevealed);\n        }\n      });\n    }\n  });\n};\n"],"sourceRoot":""}